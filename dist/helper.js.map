{
  "version": 3,
  "sources": ["../node_modules/stackframe/stackframe.js", "../node_modules/error-stack-parser/error-stack-parser.js", "../node_modules/stack-generator/stack-generator.js", "../node_modules/source-map/lib/util.js", "../node_modules/source-map/lib/binary-search.js", "../node_modules/source-map/lib/array-set.js", "../node_modules/source-map/lib/base64.js", "../node_modules/source-map/lib/base64-vlq.js", "../node_modules/source-map/lib/quick-sort.js", "../node_modules/source-map/lib/source-map-consumer.js", "../node_modules/stacktrace-gps/stacktrace-gps.js", "../node_modules/stacktrace-js/stacktrace.js", "../helper.ts"],
  "sourcesContent": ["(function(root, factory) {\r\n    'use strict';\r\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\r\n\r\n    /* istanbul ignore next */\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('stackframe', [], factory);\r\n    } else if (typeof exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        root.StackFrame = factory();\r\n    }\r\n}(this, function() {\r\n    'use strict';\r\n    function _isNumber(n) {\r\n        return !isNaN(parseFloat(n)) && isFinite(n);\r\n    }\r\n\r\n    function _capitalize(str) {\r\n        return str.charAt(0).toUpperCase() + str.substring(1);\r\n    }\r\n\r\n    function _getter(p) {\r\n        return function() {\r\n            return this[p];\r\n        };\r\n    }\r\n\r\n    var booleanProps = ['isConstructor', 'isEval', 'isNative', 'isToplevel'];\r\n    var numericProps = ['columnNumber', 'lineNumber'];\r\n    var stringProps = ['fileName', 'functionName', 'source'];\r\n    var arrayProps = ['args'];\r\n    var objectProps = ['evalOrigin'];\r\n\r\n    var props = booleanProps.concat(numericProps, stringProps, arrayProps, objectProps);\r\n\r\n    function StackFrame(obj) {\r\n        if (!obj) return;\r\n        for (var i = 0; i < props.length; i++) {\r\n            if (obj[props[i]] !== undefined) {\r\n                this['set' + _capitalize(props[i])](obj[props[i]]);\r\n            }\r\n        }\r\n    }\r\n\r\n    StackFrame.prototype = {\r\n        getArgs: function() {\r\n            return this.args;\r\n        },\r\n        setArgs: function(v) {\r\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\r\n                throw new TypeError('Args must be an Array');\r\n            }\r\n            this.args = v;\r\n        },\r\n\r\n        getEvalOrigin: function() {\r\n            return this.evalOrigin;\r\n        },\r\n        setEvalOrigin: function(v) {\r\n            if (v instanceof StackFrame) {\r\n                this.evalOrigin = v;\r\n            } else if (v instanceof Object) {\r\n                this.evalOrigin = new StackFrame(v);\r\n            } else {\r\n                throw new TypeError('Eval Origin must be an Object or StackFrame');\r\n            }\r\n        },\r\n\r\n        toString: function() {\r\n            var fileName = this.getFileName() || '';\r\n            var lineNumber = this.getLineNumber() || '';\r\n            var columnNumber = this.getColumnNumber() || '';\r\n            var functionName = this.getFunctionName() || '';\r\n            if (this.getIsEval()) {\r\n                if (fileName) {\r\n                    return '[eval] (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\r\n                }\r\n                return '[eval]:' + lineNumber + ':' + columnNumber;\r\n            }\r\n            if (functionName) {\r\n                return functionName + ' (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\r\n            }\r\n            return fileName + ':' + lineNumber + ':' + columnNumber;\r\n        }\r\n    };\r\n\r\n    StackFrame.fromString = function StackFrame$$fromString(str) {\r\n        var argsStartIndex = str.indexOf('(');\r\n        var argsEndIndex = str.lastIndexOf(')');\r\n\r\n        var functionName = str.substring(0, argsStartIndex);\r\n        var args = str.substring(argsStartIndex + 1, argsEndIndex).split(',');\r\n        var locationString = str.substring(argsEndIndex + 1);\r\n\r\n        if (locationString.indexOf('@') === 0) {\r\n            var parts = /@(.+?)(?::(\\d+))?(?::(\\d+))?$/.exec(locationString, '');\r\n            var fileName = parts[1];\r\n            var lineNumber = parts[2];\r\n            var columnNumber = parts[3];\r\n        }\r\n\r\n        return new StackFrame({\r\n            functionName: functionName,\r\n            args: args || undefined,\r\n            fileName: fileName,\r\n            lineNumber: lineNumber || undefined,\r\n            columnNumber: columnNumber || undefined\r\n        });\r\n    };\r\n\r\n    for (var i = 0; i < booleanProps.length; i++) {\r\n        StackFrame.prototype['get' + _capitalize(booleanProps[i])] = _getter(booleanProps[i]);\r\n        StackFrame.prototype['set' + _capitalize(booleanProps[i])] = (function(p) {\r\n            return function(v) {\r\n                this[p] = Boolean(v);\r\n            };\r\n        })(booleanProps[i]);\r\n    }\r\n\r\n    for (var j = 0; j < numericProps.length; j++) {\r\n        StackFrame.prototype['get' + _capitalize(numericProps[j])] = _getter(numericProps[j]);\r\n        StackFrame.prototype['set' + _capitalize(numericProps[j])] = (function(p) {\r\n            return function(v) {\r\n                if (!_isNumber(v)) {\r\n                    throw new TypeError(p + ' must be a Number');\r\n                }\r\n                this[p] = Number(v);\r\n            };\r\n        })(numericProps[j]);\r\n    }\r\n\r\n    for (var k = 0; k < stringProps.length; k++) {\r\n        StackFrame.prototype['get' + _capitalize(stringProps[k])] = _getter(stringProps[k]);\r\n        StackFrame.prototype['set' + _capitalize(stringProps[k])] = (function(p) {\r\n            return function(v) {\r\n                this[p] = String(v);\r\n            };\r\n        })(stringProps[k]);\r\n    }\r\n\r\n    return StackFrame;\r\n}));\r\n", "(function(root, factory) {\r\n    'use strict';\r\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\r\n\r\n    /* istanbul ignore next */\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('error-stack-parser', ['stackframe'], factory);\r\n    } else if (typeof exports === 'object') {\r\n        module.exports = factory(require('stackframe'));\r\n    } else {\r\n        root.ErrorStackParser = factory(root.StackFrame);\r\n    }\r\n}(this, function ErrorStackParser(StackFrame) {\r\n    'use strict';\r\n\r\n    var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\\S+:\\d+/;\r\n    var CHROME_IE_STACK_REGEXP = /^\\s*at .*(\\S+:\\d+|\\(native\\))/m;\r\n    var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\\[native code])?$/;\r\n\r\n    return {\r\n        /**\r\n         * Given an Error object, extract the most information from it.\r\n         *\r\n         * @param {Error} error object\r\n         * @return {Array} of StackFrames\r\n         */\r\n        parse: function ErrorStackParser$$parse(error) {\r\n            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\r\n                return this.parseOpera(error);\r\n            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\r\n                return this.parseV8OrIE(error);\r\n            } else if (error.stack) {\r\n                return this.parseFFOrSafari(error);\r\n            } else {\r\n                throw new Error('Cannot parse given Error object');\r\n            }\r\n        },\r\n\r\n        // Separate line and column numbers from a string of the form: (URI:Line:Column)\r\n        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\r\n            // Fail-fast but return locations like \"(native)\"\r\n            if (urlLike.indexOf(':') === -1) {\r\n                return [urlLike];\r\n            }\r\n\r\n            var regExp = /(.+?)(?::(\\d+))?(?::(\\d+))?$/;\r\n            var parts = regExp.exec(urlLike.replace(/[()]/g, ''));\r\n            return [parts[1], parts[2] || undefined, parts[3] || undefined];\r\n        },\r\n\r\n        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\r\n            var filtered = error.stack.split('\\n').filter(function(line) {\r\n                return !!line.match(CHROME_IE_STACK_REGEXP);\r\n            }, this);\r\n\r\n            return filtered.map(function(line) {\r\n                if (line.indexOf('(eval ') > -1) {\r\n                    // Throw away eval information until we implement stacktrace.js/stackframe#8\r\n                    line = line.replace(/eval code/g, 'eval').replace(/(\\(eval at [^()]*)|(\\),.*$)/g, '');\r\n                }\r\n                var sanitizedLine = line.replace(/^\\s+/, '').replace(/\\(eval code/g, '(');\r\n\r\n                // capture and preseve the parenthesized location \"(/foo/my bar.js:12:87)\" in\r\n                // case it has spaces in it, as the string is split on \\s+ later on\r\n                var location = sanitizedLine.match(/ (\\((.+):(\\d+):(\\d+)\\)$)/);\r\n\r\n                // remove the parenthesized location from the line, if it was matched\r\n                sanitizedLine = location ? sanitizedLine.replace(location[0], '') : sanitizedLine;\r\n\r\n                var tokens = sanitizedLine.split(/\\s+/).slice(1);\r\n                // if a location was matched, pass it to extractLocation() otherwise pop the last token\r\n                var locationParts = this.extractLocation(location ? location[1] : tokens.pop());\r\n                var functionName = tokens.join(' ') || undefined;\r\n                var fileName = ['eval', '<anonymous>'].indexOf(locationParts[0]) > -1 ? undefined : locationParts[0];\r\n\r\n                return new StackFrame({\r\n                    functionName: functionName,\r\n                    fileName: fileName,\r\n                    lineNumber: locationParts[1],\r\n                    columnNumber: locationParts[2],\r\n                    source: line\r\n                });\r\n            }, this);\r\n        },\r\n\r\n        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\r\n            var filtered = error.stack.split('\\n').filter(function(line) {\r\n                return !line.match(SAFARI_NATIVE_CODE_REGEXP);\r\n            }, this);\r\n\r\n            return filtered.map(function(line) {\r\n                // Throw away eval information until we implement stacktrace.js/stackframe#8\r\n                if (line.indexOf(' > eval') > -1) {\r\n                    line = line.replace(/ line (\\d+)(?: > eval line \\d+)* > eval:\\d+:\\d+/g, ':$1');\r\n                }\r\n\r\n                if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {\r\n                    // Safari eval frames only have function names and nothing else\r\n                    return new StackFrame({\r\n                        functionName: line\r\n                    });\r\n                } else {\r\n                    var functionNameRegex = /((.*\".+\"[^@]*)?[^@]*)(?:@)/;\r\n                    var matches = line.match(functionNameRegex);\r\n                    var functionName = matches && matches[1] ? matches[1] : undefined;\r\n                    var locationParts = this.extractLocation(line.replace(functionNameRegex, ''));\r\n\r\n                    return new StackFrame({\r\n                        functionName: functionName,\r\n                        fileName: locationParts[0],\r\n                        lineNumber: locationParts[1],\r\n                        columnNumber: locationParts[2],\r\n                        source: line\r\n                    });\r\n                }\r\n            }, this);\r\n        },\r\n\r\n        parseOpera: function ErrorStackParser$$parseOpera(e) {\r\n            if (!e.stacktrace || (e.message.indexOf('\\n') > -1 &&\r\n                e.message.split('\\n').length > e.stacktrace.split('\\n').length)) {\r\n                return this.parseOpera9(e);\r\n            } else if (!e.stack) {\r\n                return this.parseOpera10(e);\r\n            } else {\r\n                return this.parseOpera11(e);\r\n            }\r\n        },\r\n\r\n        parseOpera9: function ErrorStackParser$$parseOpera9(e) {\r\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\r\n            var lines = e.message.split('\\n');\r\n            var result = [];\r\n\r\n            for (var i = 2, len = lines.length; i < len; i += 2) {\r\n                var match = lineRE.exec(lines[i]);\r\n                if (match) {\r\n                    result.push(new StackFrame({\r\n                        fileName: match[2],\r\n                        lineNumber: match[1],\r\n                        source: lines[i]\r\n                    }));\r\n                }\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        parseOpera10: function ErrorStackParser$$parseOpera10(e) {\r\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\r\n            var lines = e.stacktrace.split('\\n');\r\n            var result = [];\r\n\r\n            for (var i = 0, len = lines.length; i < len; i += 2) {\r\n                var match = lineRE.exec(lines[i]);\r\n                if (match) {\r\n                    result.push(\r\n                        new StackFrame({\r\n                            functionName: match[3] || undefined,\r\n                            fileName: match[2],\r\n                            lineNumber: match[1],\r\n                            source: lines[i]\r\n                        })\r\n                    );\r\n                }\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        // Opera 10.65+ Error.stack very similar to FF/Safari\r\n        parseOpera11: function ErrorStackParser$$parseOpera11(error) {\r\n            var filtered = error.stack.split('\\n').filter(function(line) {\r\n                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) && !line.match(/^Error created at/);\r\n            }, this);\r\n\r\n            return filtered.map(function(line) {\r\n                var tokens = line.split('@');\r\n                var locationParts = this.extractLocation(tokens.pop());\r\n                var functionCall = (tokens.shift() || '');\r\n                var functionName = functionCall\r\n                    .replace(/<anonymous function(: (\\w+))?>/, '$2')\r\n                    .replace(/\\([^)]*\\)/g, '') || undefined;\r\n                var argsRaw;\r\n                if (functionCall.match(/\\(([^)]*)\\)/)) {\r\n                    argsRaw = functionCall.replace(/^[^(]+\\(([^)]*)\\)$/, '$1');\r\n                }\r\n                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ?\r\n                    undefined : argsRaw.split(',');\r\n\r\n                return new StackFrame({\r\n                    functionName: functionName,\r\n                    args: args,\r\n                    fileName: locationParts[0],\r\n                    lineNumber: locationParts[1],\r\n                    columnNumber: locationParts[2],\r\n                    source: line\r\n                });\r\n            }, this);\r\n        }\r\n    };\r\n}));\r\n", "(function(root, factory) {\r\n    'use strict';\r\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\r\n\r\n    /* istanbul ignore next */\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('stack-generator', ['stackframe'], factory);\r\n    } else if (typeof exports === 'object') {\r\n        module.exports = factory(require('stackframe'));\r\n    } else {\r\n        root.StackGenerator = factory(root.StackFrame);\r\n    }\r\n}(this, function(StackFrame) {\r\n    return {\r\n        backtrace: function StackGenerator$$backtrace(opts) {\r\n            var stack = [];\r\n            var maxStackSize = 10;\r\n\r\n            if (typeof opts === 'object' && typeof opts.maxStackSize === 'number') {\r\n                maxStackSize = opts.maxStackSize;\r\n            }\r\n\r\n            var curr = arguments.callee;\r\n            while (curr && stack.length < maxStackSize && curr['arguments']) {\r\n                // Allow V8 optimizations\r\n                var args = new Array(curr['arguments'].length);\r\n                for (var i = 0; i < args.length; ++i) {\r\n                    args[i] = curr['arguments'][i];\r\n                }\r\n                if (/function(?:\\s+([\\w$]+))+\\s*\\(/.test(curr.toString())) {\r\n                    stack.push(new StackFrame({functionName: RegExp.$1 || undefined, args: args}));\r\n                } else {\r\n                    stack.push(new StackFrame({args: args}));\r\n                }\r\n\r\n                try {\r\n                    curr = curr.caller;\r\n                } catch (e) {\r\n                    break;\r\n                }\r\n            }\r\n            return stack;\r\n        }\r\n    };\r\n}));\r\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\r\n/*\r\n * Copyright 2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\n/**\r\n * This is a helper function for getting values from parameter/options\r\n * objects.\r\n *\r\n * @param args The object we are extracting values from\r\n * @param name The name of the property we are getting.\r\n * @param defaultValue An optional value to return if the property is missing\r\n * from the object. If this is not specified and the property is missing, an\r\n * error will be thrown.\r\n */\r\nfunction getArg(aArgs, aName, aDefaultValue) {\r\n  if (aName in aArgs) {\r\n    return aArgs[aName];\r\n  } else if (arguments.length === 3) {\r\n    return aDefaultValue;\r\n  } else {\r\n    throw new Error('\"' + aName + '\" is a required argument.');\r\n  }\r\n}\r\nexports.getArg = getArg;\r\n\r\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.]*)(?::(\\d+))?(\\S*)$/;\r\nvar dataUrlRegexp = /^data:.+\\,.+$/;\r\n\r\nfunction urlParse(aUrl) {\r\n  var match = aUrl.match(urlRegexp);\r\n  if (!match) {\r\n    return null;\r\n  }\r\n  return {\r\n    scheme: match[1],\r\n    auth: match[2],\r\n    host: match[3],\r\n    port: match[4],\r\n    path: match[5]\r\n  };\r\n}\r\nexports.urlParse = urlParse;\r\n\r\nfunction urlGenerate(aParsedUrl) {\r\n  var url = '';\r\n  if (aParsedUrl.scheme) {\r\n    url += aParsedUrl.scheme + ':';\r\n  }\r\n  url += '//';\r\n  if (aParsedUrl.auth) {\r\n    url += aParsedUrl.auth + '@';\r\n  }\r\n  if (aParsedUrl.host) {\r\n    url += aParsedUrl.host;\r\n  }\r\n  if (aParsedUrl.port) {\r\n    url += \":\" + aParsedUrl.port\r\n  }\r\n  if (aParsedUrl.path) {\r\n    url += aParsedUrl.path;\r\n  }\r\n  return url;\r\n}\r\nexports.urlGenerate = urlGenerate;\r\n\r\n/**\r\n * Normalizes a path, or the path portion of a URL:\r\n *\r\n * - Replaces consecutive slashes with one slash.\r\n * - Removes unnecessary '.' parts.\r\n * - Removes unnecessary '<dir>/..' parts.\r\n *\r\n * Based on code in the Node.js 'path' core module.\r\n *\r\n * @param aPath The path or url to normalize.\r\n */\r\nfunction normalize(aPath) {\r\n  var path = aPath;\r\n  var url = urlParse(aPath);\r\n  if (url) {\r\n    if (!url.path) {\r\n      return aPath;\r\n    }\r\n    path = url.path;\r\n  }\r\n  var isAbsolute = exports.isAbsolute(path);\r\n\r\n  var parts = path.split(/\\/+/);\r\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\r\n    part = parts[i];\r\n    if (part === '.') {\r\n      parts.splice(i, 1);\r\n    } else if (part === '..') {\r\n      up++;\r\n    } else if (up > 0) {\r\n      if (part === '') {\r\n        // The first part is blank if the path is absolute. Trying to go\r\n        // above the root is a no-op. Therefore we can remove all '..' parts\r\n        // directly after the root.\r\n        parts.splice(i + 1, up);\r\n        up = 0;\r\n      } else {\r\n        parts.splice(i, 2);\r\n        up--;\r\n      }\r\n    }\r\n  }\r\n  path = parts.join('/');\r\n\r\n  if (path === '') {\r\n    path = isAbsolute ? '/' : '.';\r\n  }\r\n\r\n  if (url) {\r\n    url.path = path;\r\n    return urlGenerate(url);\r\n  }\r\n  return path;\r\n}\r\nexports.normalize = normalize;\r\n\r\n/**\r\n * Joins two paths/URLs.\r\n *\r\n * @param aRoot The root path or URL.\r\n * @param aPath The path or URL to be joined with the root.\r\n *\r\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\r\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\r\n *   first.\r\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\r\n *   is updated with the result and aRoot is returned. Otherwise the result\r\n *   is returned.\r\n *   - If aPath is absolute, the result is aPath.\r\n *   - Otherwise the two paths are joined with a slash.\r\n * - Joining for example 'http://' and 'www.example.com' is also supported.\r\n */\r\nfunction join(aRoot, aPath) {\r\n  if (aRoot === \"\") {\r\n    aRoot = \".\";\r\n  }\r\n  if (aPath === \"\") {\r\n    aPath = \".\";\r\n  }\r\n  var aPathUrl = urlParse(aPath);\r\n  var aRootUrl = urlParse(aRoot);\r\n  if (aRootUrl) {\r\n    aRoot = aRootUrl.path || '/';\r\n  }\r\n\r\n  // `join(foo, '//www.example.org')`\r\n  if (aPathUrl && !aPathUrl.scheme) {\r\n    if (aRootUrl) {\r\n      aPathUrl.scheme = aRootUrl.scheme;\r\n    }\r\n    return urlGenerate(aPathUrl);\r\n  }\r\n\r\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\r\n    return aPath;\r\n  }\r\n\r\n  // `join('http://', 'www.example.com')`\r\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\r\n    aRootUrl.host = aPath;\r\n    return urlGenerate(aRootUrl);\r\n  }\r\n\r\n  var joined = aPath.charAt(0) === '/'\r\n    ? aPath\r\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\r\n\r\n  if (aRootUrl) {\r\n    aRootUrl.path = joined;\r\n    return urlGenerate(aRootUrl);\r\n  }\r\n  return joined;\r\n}\r\nexports.join = join;\r\n\r\nexports.isAbsolute = function (aPath) {\r\n  return aPath.charAt(0) === '/' || !!aPath.match(urlRegexp);\r\n};\r\n\r\n/**\r\n * Make a path relative to a URL or another path.\r\n *\r\n * @param aRoot The root path or URL.\r\n * @param aPath The path or URL to be made relative to aRoot.\r\n */\r\nfunction relative(aRoot, aPath) {\r\n  if (aRoot === \"\") {\r\n    aRoot = \".\";\r\n  }\r\n\r\n  aRoot = aRoot.replace(/\\/$/, '');\r\n\r\n  // It is possible for the path to be above the root. In this case, simply\r\n  // checking whether the root is a prefix of the path won't work. Instead, we\r\n  // need to remove components from the root one by one, until either we find\r\n  // a prefix that fits, or we run out of components to remove.\r\n  var level = 0;\r\n  while (aPath.indexOf(aRoot + '/') !== 0) {\r\n    var index = aRoot.lastIndexOf(\"/\");\r\n    if (index < 0) {\r\n      return aPath;\r\n    }\r\n\r\n    // If the only part of the root that is left is the scheme (i.e. http://,\r\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\r\n    // have exhausted all components, so the path is not relative to the root.\r\n    aRoot = aRoot.slice(0, index);\r\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\r\n      return aPath;\r\n    }\r\n\r\n    ++level;\r\n  }\r\n\r\n  // Make sure we add a \"../\" for each component we removed from the root.\r\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\r\n}\r\nexports.relative = relative;\r\n\r\nvar supportsNullProto = (function () {\r\n  var obj = Object.create(null);\r\n  return !('__proto__' in obj);\r\n}());\r\n\r\nfunction identity (s) {\r\n  return s;\r\n}\r\n\r\n/**\r\n * Because behavior goes wacky when you set `__proto__` on objects, we\r\n * have to prefix all the strings in our set with an arbitrary character.\r\n *\r\n * See https://github.com/mozilla/source-map/pull/31 and\r\n * https://github.com/mozilla/source-map/issues/30\r\n *\r\n * @param String aStr\r\n */\r\nfunction toSetString(aStr) {\r\n  if (isProtoString(aStr)) {\r\n    return '$' + aStr;\r\n  }\r\n\r\n  return aStr;\r\n}\r\nexports.toSetString = supportsNullProto ? identity : toSetString;\r\n\r\nfunction fromSetString(aStr) {\r\n  if (isProtoString(aStr)) {\r\n    return aStr.slice(1);\r\n  }\r\n\r\n  return aStr;\r\n}\r\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\r\n\r\nfunction isProtoString(s) {\r\n  if (!s) {\r\n    return false;\r\n  }\r\n\r\n  var length = s.length;\r\n\r\n  if (length < 9 /* \"__proto__\".length */) {\r\n    return false;\r\n  }\r\n\r\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\r\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\r\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\r\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\r\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\r\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\r\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\r\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\r\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\r\n    return false;\r\n  }\r\n\r\n  for (var i = length - 10; i >= 0; i--) {\r\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n/**\r\n * Comparator between two mappings where the original positions are compared.\r\n *\r\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\r\n * mappings with the same original source/line/column, but different generated\r\n * line and column the same. Useful when searching for a mapping with a\r\n * stubbed out mapping.\r\n */\r\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\r\n  var cmp = mappingA.source - mappingB.source;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.originalLine - mappingB.originalLine;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\r\n  if (cmp !== 0 || onlyCompareOriginal) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  return mappingA.name - mappingB.name;\r\n}\r\nexports.compareByOriginalPositions = compareByOriginalPositions;\r\n\r\n/**\r\n * Comparator between two mappings with deflated source and name indices where\r\n * the generated positions are compared.\r\n *\r\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\r\n * mappings with the same generated line and column, but different\r\n * source/name/original line and column the same. Useful when searching for a\r\n * mapping with a stubbed out mapping.\r\n */\r\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\r\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\r\n  if (cmp !== 0 || onlyCompareGenerated) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.source - mappingB.source;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.originalLine - mappingB.originalLine;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  return mappingA.name - mappingB.name;\r\n}\r\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\r\n\r\nfunction strcmp(aStr1, aStr2) {\r\n  if (aStr1 === aStr2) {\r\n    return 0;\r\n  }\r\n\r\n  if (aStr1 > aStr2) {\r\n    return 1;\r\n  }\r\n\r\n  return -1;\r\n}\r\n\r\n/**\r\n * Comparator between two mappings with inflated source and name strings where\r\n * the generated positions are compared.\r\n */\r\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\r\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = strcmp(mappingA.source, mappingB.source);\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.originalLine - mappingB.originalLine;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  return strcmp(mappingA.name, mappingB.name);\r\n}\r\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\r\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\r\n/*\r\n * Copyright 2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\nexports.GREATEST_LOWER_BOUND = 1;\r\nexports.LEAST_UPPER_BOUND = 2;\r\n\r\n/**\r\n * Recursive implementation of binary search.\r\n *\r\n * @param aLow Indices here and lower do not contain the needle.\r\n * @param aHigh Indices here and higher do not contain the needle.\r\n * @param aNeedle The element being searched for.\r\n * @param aHaystack The non-empty array being searched.\r\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\r\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\r\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\r\n *     closest element that is smaller than or greater than the one we are\r\n *     searching for, respectively, if the exact element cannot be found.\r\n */\r\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\r\n  // This function terminates when one of the following is true:\r\n  //\r\n  //   1. We find the exact element we are looking for.\r\n  //\r\n  //   2. We did not find the exact element, but we can return the index of\r\n  //      the next-closest element.\r\n  //\r\n  //   3. We did not find the exact element, and there is no next-closest\r\n  //      element than the one we are searching for, so we return -1.\r\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\r\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\r\n  if (cmp === 0) {\r\n    // Found the element we are looking for.\r\n    return mid;\r\n  }\r\n  else if (cmp > 0) {\r\n    // Our needle is greater than aHaystack[mid].\r\n    if (aHigh - mid > 1) {\r\n      // The element is in the upper half.\r\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\r\n    }\r\n\r\n    // The exact needle element was not found in this haystack. Determine if\r\n    // we are in termination case (3) or (2) and return the appropriate thing.\r\n    if (aBias == exports.LEAST_UPPER_BOUND) {\r\n      return aHigh < aHaystack.length ? aHigh : -1;\r\n    } else {\r\n      return mid;\r\n    }\r\n  }\r\n  else {\r\n    // Our needle is less than aHaystack[mid].\r\n    if (mid - aLow > 1) {\r\n      // The element is in the lower half.\r\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\r\n    }\r\n\r\n    // we are in termination case (3) or (2) and return the appropriate thing.\r\n    if (aBias == exports.LEAST_UPPER_BOUND) {\r\n      return mid;\r\n    } else {\r\n      return aLow < 0 ? -1 : aLow;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * This is an implementation of binary search which will always try and return\r\n * the index of the closest element if there is no exact hit. This is because\r\n * mappings between original and generated line/col pairs are single points,\r\n * and there is an implicit region between each of them, so a miss just means\r\n * that you aren't on the very start of a region.\r\n *\r\n * @param aNeedle The element you are looking for.\r\n * @param aHaystack The array that is being searched.\r\n * @param aCompare A function which takes the needle and an element in the\r\n *     array and returns -1, 0, or 1 depending on whether the needle is less\r\n *     than, equal to, or greater than the element, respectively.\r\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\r\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\r\n *     closest element that is smaller than or greater than the one we are\r\n *     searching for, respectively, if the exact element cannot be found.\r\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\r\n */\r\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\r\n  if (aHaystack.length === 0) {\r\n    return -1;\r\n  }\r\n\r\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\r\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\r\n  if (index < 0) {\r\n    return -1;\r\n  }\r\n\r\n  // We have found either the exact element, or the next-closest element than\r\n  // the one we are searching for. However, there may be more than one such\r\n  // element. Make sure we always return the smallest of these.\r\n  while (index - 1 >= 0) {\r\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\r\n      break;\r\n    }\r\n    --index;\r\n  }\r\n\r\n  return index;\r\n};\r\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\r\n/*\r\n * Copyright 2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\nvar util = require('./util');\r\nvar has = Object.prototype.hasOwnProperty;\r\n\r\n/**\r\n * A data structure which is a combination of an array and a set. Adding a new\r\n * member is O(1), testing for membership is O(1), and finding the index of an\r\n * element is O(1). Removing elements from the set is not supported. Only\r\n * strings are supported for membership.\r\n */\r\nfunction ArraySet() {\r\n  this._array = [];\r\n  this._set = Object.create(null);\r\n}\r\n\r\n/**\r\n * Static method for creating ArraySet instances from an existing array.\r\n */\r\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\r\n  var set = new ArraySet();\r\n  for (var i = 0, len = aArray.length; i < len; i++) {\r\n    set.add(aArray[i], aAllowDuplicates);\r\n  }\r\n  return set;\r\n};\r\n\r\n/**\r\n * Return how many unique items are in this ArraySet. If duplicates have been\r\n * added, than those do not count towards the size.\r\n *\r\n * @returns Number\r\n */\r\nArraySet.prototype.size = function ArraySet_size() {\r\n  return Object.getOwnPropertyNames(this._set).length;\r\n};\r\n\r\n/**\r\n * Add the given string to this set.\r\n *\r\n * @param String aStr\r\n */\r\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\r\n  var sStr = util.toSetString(aStr);\r\n  var isDuplicate = has.call(this._set, sStr);\r\n  var idx = this._array.length;\r\n  if (!isDuplicate || aAllowDuplicates) {\r\n    this._array.push(aStr);\r\n  }\r\n  if (!isDuplicate) {\r\n    this._set[sStr] = idx;\r\n  }\r\n};\r\n\r\n/**\r\n * Is the given string a member of this set?\r\n *\r\n * @param String aStr\r\n */\r\nArraySet.prototype.has = function ArraySet_has(aStr) {\r\n  var sStr = util.toSetString(aStr);\r\n  return has.call(this._set, sStr);\r\n};\r\n\r\n/**\r\n * What is the index of the given string in the array?\r\n *\r\n * @param String aStr\r\n */\r\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\r\n  var sStr = util.toSetString(aStr);\r\n  if (has.call(this._set, sStr)) {\r\n    return this._set[sStr];\r\n  }\r\n  throw new Error('\"' + aStr + '\" is not in the set.');\r\n};\r\n\r\n/**\r\n * What is the element at the given index?\r\n *\r\n * @param Number aIdx\r\n */\r\nArraySet.prototype.at = function ArraySet_at(aIdx) {\r\n  if (aIdx >= 0 && aIdx < this._array.length) {\r\n    return this._array[aIdx];\r\n  }\r\n  throw new Error('No element indexed by ' + aIdx);\r\n};\r\n\r\n/**\r\n * Returns the array representation of this set (which has the proper indices\r\n * indicated by indexOf). Note that this is a copy of the internal array used\r\n * for storing the members so that no one can mess with internal state.\r\n */\r\nArraySet.prototype.toArray = function ArraySet_toArray() {\r\n  return this._array.slice();\r\n};\r\n\r\nexports.ArraySet = ArraySet;\r\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\r\n/*\r\n * Copyright 2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\r\n\r\n/**\r\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\r\n */\r\nexports.encode = function (number) {\r\n  if (0 <= number && number < intToCharMap.length) {\r\n    return intToCharMap[number];\r\n  }\r\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\r\n};\r\n\r\n/**\r\n * Decode a single base 64 character code digit to an integer. Returns -1 on\r\n * failure.\r\n */\r\nexports.decode = function (charCode) {\r\n  var bigA = 65;     // 'A'\r\n  var bigZ = 90;     // 'Z'\r\n\r\n  var littleA = 97;  // 'a'\r\n  var littleZ = 122; // 'z'\r\n\r\n  var zero = 48;     // '0'\r\n  var nine = 57;     // '9'\r\n\r\n  var plus = 43;     // '+'\r\n  var slash = 47;    // '/'\r\n\r\n  var littleOffset = 26;\r\n  var numberOffset = 52;\r\n\r\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\n  if (bigA <= charCode && charCode <= bigZ) {\r\n    return (charCode - bigA);\r\n  }\r\n\r\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\r\n  if (littleA <= charCode && charCode <= littleZ) {\r\n    return (charCode - littleA + littleOffset);\r\n  }\r\n\r\n  // 52 - 61: 0123456789\r\n  if (zero <= charCode && charCode <= nine) {\r\n    return (charCode - zero + numberOffset);\r\n  }\r\n\r\n  // 62: +\r\n  if (charCode == plus) {\r\n    return 62;\r\n  }\r\n\r\n  // 63: /\r\n  if (charCode == slash) {\r\n    return 63;\r\n  }\r\n\r\n  // Invalid base64 digit.\r\n  return -1;\r\n};\r\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\r\n/*\r\n * Copyright 2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n *\r\n * Based on the Base 64 VLQ implementation in Closure Compiler:\r\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\r\n *\r\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are\r\n * met:\r\n *\r\n *  * Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above\r\n *    copyright notice, this list of conditions and the following\r\n *    disclaimer in the documentation and/or other materials provided\r\n *    with the distribution.\r\n *  * Neither the name of Google Inc. nor the names of its\r\n *    contributors may be used to endorse or promote products derived\r\n *    from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nvar base64 = require('./base64');\r\n\r\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\r\n// length quantities we use in the source map spec, the first bit is the sign,\r\n// the next four bits are the actual value, and the 6th bit is the\r\n// continuation bit. The continuation bit tells us whether there are more\r\n// digits in this value following this digit.\r\n//\r\n//   Continuation\r\n//   |    Sign\r\n//   |    |\r\n//   V    V\r\n//   101011\r\n\r\nvar VLQ_BASE_SHIFT = 5;\r\n\r\n// binary: 100000\r\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\r\n\r\n// binary: 011111\r\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\r\n\r\n// binary: 100000\r\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\r\n\r\n/**\r\n * Converts from a two-complement value to a value where the sign bit is\r\n * placed in the least significant bit.  For example, as decimals:\r\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\r\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\r\n */\r\nfunction toVLQSigned(aValue) {\r\n  return aValue < 0\r\n    ? ((-aValue) << 1) + 1\r\n    : (aValue << 1) + 0;\r\n}\r\n\r\n/**\r\n * Converts to a two-complement value from a value where the sign bit is\r\n * placed in the least significant bit.  For example, as decimals:\r\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\r\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\r\n */\r\nfunction fromVLQSigned(aValue) {\r\n  var isNegative = (aValue & 1) === 1;\r\n  var shifted = aValue >> 1;\r\n  return isNegative\r\n    ? -shifted\r\n    : shifted;\r\n}\r\n\r\n/**\r\n * Returns the base 64 VLQ encoded value.\r\n */\r\nexports.encode = function base64VLQ_encode(aValue) {\r\n  var encoded = \"\";\r\n  var digit;\r\n\r\n  var vlq = toVLQSigned(aValue);\r\n\r\n  do {\r\n    digit = vlq & VLQ_BASE_MASK;\r\n    vlq >>>= VLQ_BASE_SHIFT;\r\n    if (vlq > 0) {\r\n      // There are still more digits in this value, so we must make sure the\r\n      // continuation bit is marked.\r\n      digit |= VLQ_CONTINUATION_BIT;\r\n    }\r\n    encoded += base64.encode(digit);\r\n  } while (vlq > 0);\r\n\r\n  return encoded;\r\n};\r\n\r\n/**\r\n * Decodes the next base 64 VLQ value from the given string and returns the\r\n * value and the rest of the string via the out parameter.\r\n */\r\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\r\n  var strLen = aStr.length;\r\n  var result = 0;\r\n  var shift = 0;\r\n  var continuation, digit;\r\n\r\n  do {\r\n    if (aIndex >= strLen) {\r\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\r\n    }\r\n\r\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\r\n    if (digit === -1) {\r\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\r\n    }\r\n\r\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\r\n    digit &= VLQ_BASE_MASK;\r\n    result = result + (digit << shift);\r\n    shift += VLQ_BASE_SHIFT;\r\n  } while (continuation);\r\n\r\n  aOutParam.value = fromVLQSigned(result);\r\n  aOutParam.rest = aIndex;\r\n};\r\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\r\n/*\r\n * Copyright 2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\n// It turns out that some (most?) JavaScript engines don't self-host\r\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\r\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\r\n// custom comparator function, calling back and forth between the VM's C++ and\r\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\r\n// worse generated code for the comparator function than would be optimal. In\r\n// fact, when sorting with a comparator, these costs outweigh the benefits of\r\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\r\n// a ~3500ms mean speed-up in `bench/bench.html`.\r\n\r\n/**\r\n * Swap the elements indexed by `x` and `y` in the array `ary`.\r\n *\r\n * @param {Array} ary\r\n *        The array.\r\n * @param {Number} x\r\n *        The index of the first item.\r\n * @param {Number} y\r\n *        The index of the second item.\r\n */\r\nfunction swap(ary, x, y) {\r\n  var temp = ary[x];\r\n  ary[x] = ary[y];\r\n  ary[y] = temp;\r\n}\r\n\r\n/**\r\n * Returns a random integer within the range `low .. high` inclusive.\r\n *\r\n * @param {Number} low\r\n *        The lower bound on the range.\r\n * @param {Number} high\r\n *        The upper bound on the range.\r\n */\r\nfunction randomIntInRange(low, high) {\r\n  return Math.round(low + (Math.random() * (high - low)));\r\n}\r\n\r\n/**\r\n * The Quick Sort algorithm.\r\n *\r\n * @param {Array} ary\r\n *        An array to sort.\r\n * @param {function} comparator\r\n *        Function to use to compare two items.\r\n * @param {Number} p\r\n *        Start index of the array\r\n * @param {Number} r\r\n *        End index of the array\r\n */\r\nfunction doQuickSort(ary, comparator, p, r) {\r\n  // If our lower bound is less than our upper bound, we (1) partition the\r\n  // array into two pieces and (2) recurse on each half. If it is not, this is\r\n  // the empty array and our base case.\r\n\r\n  if (p < r) {\r\n    // (1) Partitioning.\r\n    //\r\n    // The partitioning chooses a pivot between `p` and `r` and moves all\r\n    // elements that are less than or equal to the pivot to the before it, and\r\n    // all the elements that are greater than it after it. The effect is that\r\n    // once partition is done, the pivot is in the exact place it will be when\r\n    // the array is put in sorted order, and it will not need to be moved\r\n    // again. This runs in O(n) time.\r\n\r\n    // Always choose a random pivot so that an input array which is reverse\r\n    // sorted does not cause O(n^2) running time.\r\n    var pivotIndex = randomIntInRange(p, r);\r\n    var i = p - 1;\r\n\r\n    swap(ary, pivotIndex, r);\r\n    var pivot = ary[r];\r\n\r\n    // Immediately after `j` is incremented in this loop, the following hold\r\n    // true:\r\n    //\r\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\r\n    //\r\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\r\n    for (var j = p; j < r; j++) {\r\n      if (comparator(ary[j], pivot) <= 0) {\r\n        i += 1;\r\n        swap(ary, i, j);\r\n      }\r\n    }\r\n\r\n    swap(ary, i + 1, j);\r\n    var q = i + 1;\r\n\r\n    // (2) Recurse on each half.\r\n\r\n    doQuickSort(ary, comparator, p, q - 1);\r\n    doQuickSort(ary, comparator, q + 1, r);\r\n  }\r\n}\r\n\r\n/**\r\n * Sort the given array in-place with the given comparator function.\r\n *\r\n * @param {Array} ary\r\n *        An array to sort.\r\n * @param {function} comparator\r\n *        Function to use to compare two items.\r\n */\r\nexports.quickSort = function (ary, comparator) {\r\n  doQuickSort(ary, comparator, 0, ary.length - 1);\r\n};\r\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\r\n/*\r\n * Copyright 2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\nvar util = require('./util');\r\nvar binarySearch = require('./binary-search');\r\nvar ArraySet = require('./array-set').ArraySet;\r\nvar base64VLQ = require('./base64-vlq');\r\nvar quickSort = require('./quick-sort').quickSort;\r\n\r\nfunction SourceMapConsumer(aSourceMap) {\r\n  var sourceMap = aSourceMap;\r\n  if (typeof aSourceMap === 'string') {\r\n    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\r\n  }\r\n\r\n  return sourceMap.sections != null\r\n    ? new IndexedSourceMapConsumer(sourceMap)\r\n    : new BasicSourceMapConsumer(sourceMap);\r\n}\r\n\r\nSourceMapConsumer.fromSourceMap = function(aSourceMap) {\r\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap);\r\n}\r\n\r\n/**\r\n * The version of the source mapping spec that we are consuming.\r\n */\r\nSourceMapConsumer.prototype._version = 3;\r\n\r\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\r\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\r\n// are lazily instantiated, accessed via the `_generatedMappings` and\r\n// `_originalMappings` getters respectively, and we only parse the mappings\r\n// and create these arrays once queried for a source location. We jump through\r\n// these hoops because there can be many thousands of mappings, and parsing\r\n// them is expensive, so we only want to do it if we must.\r\n//\r\n// Each object in the arrays is of the form:\r\n//\r\n//     {\r\n//       generatedLine: The line number in the generated code,\r\n//       generatedColumn: The column number in the generated code,\r\n//       source: The path to the original source file that generated this\r\n//               chunk of code,\r\n//       originalLine: The line number in the original source that\r\n//                     corresponds to this chunk of generated code,\r\n//       originalColumn: The column number in the original source that\r\n//                       corresponds to this chunk of generated code,\r\n//       name: The name of the original symbol which generated this chunk of\r\n//             code.\r\n//     }\r\n//\r\n// All properties except for `generatedLine` and `generatedColumn` can be\r\n// `null`.\r\n//\r\n// `_generatedMappings` is ordered by the generated positions.\r\n//\r\n// `_originalMappings` is ordered by the original positions.\r\n\r\nSourceMapConsumer.prototype.__generatedMappings = null;\r\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\r\n  get: function () {\r\n    if (!this.__generatedMappings) {\r\n      this._parseMappings(this._mappings, this.sourceRoot);\r\n    }\r\n\r\n    return this.__generatedMappings;\r\n  }\r\n});\r\n\r\nSourceMapConsumer.prototype.__originalMappings = null;\r\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\r\n  get: function () {\r\n    if (!this.__originalMappings) {\r\n      this._parseMappings(this._mappings, this.sourceRoot);\r\n    }\r\n\r\n    return this.__originalMappings;\r\n  }\r\n});\r\n\r\nSourceMapConsumer.prototype._charIsMappingSeparator =\r\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\r\n    var c = aStr.charAt(index);\r\n    return c === \";\" || c === \",\";\r\n  };\r\n\r\n/**\r\n * Parse the mappings in a string in to a data structure which we can easily\r\n * query (the ordered arrays in the `this.__generatedMappings` and\r\n * `this.__originalMappings` properties).\r\n */\r\nSourceMapConsumer.prototype._parseMappings =\r\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\r\n    throw new Error(\"Subclasses must implement _parseMappings\");\r\n  };\r\n\r\nSourceMapConsumer.GENERATED_ORDER = 1;\r\nSourceMapConsumer.ORIGINAL_ORDER = 2;\r\n\r\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\r\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\r\n\r\n/**\r\n * Iterate over each mapping between an original source/line/column and a\r\n * generated line/column in this source map.\r\n *\r\n * @param Function aCallback\r\n *        The function that is called with each mapping.\r\n * @param Object aContext\r\n *        Optional. If specified, this object will be the value of `this` every\r\n *        time that `aCallback` is called.\r\n * @param aOrder\r\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\r\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\r\n *        iterate over the mappings sorted by the generated file's line/column\r\n *        order or the original's source/line/column order, respectively. Defaults to\r\n *        `SourceMapConsumer.GENERATED_ORDER`.\r\n */\r\nSourceMapConsumer.prototype.eachMapping =\r\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\r\n    var context = aContext || null;\r\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\r\n\r\n    var mappings;\r\n    switch (order) {\r\n    case SourceMapConsumer.GENERATED_ORDER:\r\n      mappings = this._generatedMappings;\r\n      break;\r\n    case SourceMapConsumer.ORIGINAL_ORDER:\r\n      mappings = this._originalMappings;\r\n      break;\r\n    default:\r\n      throw new Error(\"Unknown order of iteration.\");\r\n    }\r\n\r\n    var sourceRoot = this.sourceRoot;\r\n    mappings.map(function (mapping) {\r\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\r\n      if (source != null && sourceRoot != null) {\r\n        source = util.join(sourceRoot, source);\r\n      }\r\n      return {\r\n        source: source,\r\n        generatedLine: mapping.generatedLine,\r\n        generatedColumn: mapping.generatedColumn,\r\n        originalLine: mapping.originalLine,\r\n        originalColumn: mapping.originalColumn,\r\n        name: mapping.name === null ? null : this._names.at(mapping.name)\r\n      };\r\n    }, this).forEach(aCallback, context);\r\n  };\r\n\r\n/**\r\n * Returns all generated line and column information for the original source,\r\n * line, and column provided. If no column is provided, returns all mappings\r\n * corresponding to a either the line we are searching for or the next\r\n * closest line that has any mappings. Otherwise, returns all mappings\r\n * corresponding to the given line and either the column we are searching for\r\n * or the next closest column that has any offsets.\r\n *\r\n * The only argument is an object with the following properties:\r\n *\r\n *   - source: The filename of the original source.\r\n *   - line: The line number in the original source.\r\n *   - column: Optional. the column number in the original source.\r\n *\r\n * and an array of objects is returned, each with the following properties:\r\n *\r\n *   - line: The line number in the generated source, or null.\r\n *   - column: The column number in the generated source, or null.\r\n */\r\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\r\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\r\n    var line = util.getArg(aArgs, 'line');\r\n\r\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\r\n    // returns the index of the closest mapping less than the needle. By\r\n    // setting needle.originalColumn to 0, we thus find the last mapping for\r\n    // the given line, provided such a mapping exists.\r\n    var needle = {\r\n      source: util.getArg(aArgs, 'source'),\r\n      originalLine: line,\r\n      originalColumn: util.getArg(aArgs, 'column', 0)\r\n    };\r\n\r\n    if (this.sourceRoot != null) {\r\n      needle.source = util.relative(this.sourceRoot, needle.source);\r\n    }\r\n    if (!this._sources.has(needle.source)) {\r\n      return [];\r\n    }\r\n    needle.source = this._sources.indexOf(needle.source);\r\n\r\n    var mappings = [];\r\n\r\n    var index = this._findMapping(needle,\r\n                                  this._originalMappings,\r\n                                  \"originalLine\",\r\n                                  \"originalColumn\",\r\n                                  util.compareByOriginalPositions,\r\n                                  binarySearch.LEAST_UPPER_BOUND);\r\n    if (index >= 0) {\r\n      var mapping = this._originalMappings[index];\r\n\r\n      if (aArgs.column === undefined) {\r\n        var originalLine = mapping.originalLine;\r\n\r\n        // Iterate until either we run out of mappings, or we run into\r\n        // a mapping for a different line than the one we found. Since\r\n        // mappings are sorted, this is guaranteed to find all mappings for\r\n        // the line we found.\r\n        while (mapping && mapping.originalLine === originalLine) {\r\n          mappings.push({\r\n            line: util.getArg(mapping, 'generatedLine', null),\r\n            column: util.getArg(mapping, 'generatedColumn', null),\r\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\r\n          });\r\n\r\n          mapping = this._originalMappings[++index];\r\n        }\r\n      } else {\r\n        var originalColumn = mapping.originalColumn;\r\n\r\n        // Iterate until either we run out of mappings, or we run into\r\n        // a mapping for a different line than the one we were searching for.\r\n        // Since mappings are sorted, this is guaranteed to find all mappings for\r\n        // the line we are searching for.\r\n        while (mapping &&\r\n               mapping.originalLine === line &&\r\n               mapping.originalColumn == originalColumn) {\r\n          mappings.push({\r\n            line: util.getArg(mapping, 'generatedLine', null),\r\n            column: util.getArg(mapping, 'generatedColumn', null),\r\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\r\n          });\r\n\r\n          mapping = this._originalMappings[++index];\r\n        }\r\n      }\r\n    }\r\n\r\n    return mappings;\r\n  };\r\n\r\nexports.SourceMapConsumer = SourceMapConsumer;\r\n\r\n/**\r\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\r\n * query for information about the original file positions by giving it a file\r\n * position in the generated source.\r\n *\r\n * The only parameter is the raw source map (either as a JSON string, or\r\n * already parsed to an object). According to the spec, source maps have the\r\n * following attributes:\r\n *\r\n *   - version: Which version of the source map spec this map is following.\r\n *   - sources: An array of URLs to the original source files.\r\n *   - names: An array of identifiers which can be referrenced by individual mappings.\r\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\r\n *   - sourcesContent: Optional. An array of contents of the original source files.\r\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\r\n *   - file: Optional. The generated file this source map is associated with.\r\n *\r\n * Here is an example source map, taken from the source map spec[0]:\r\n *\r\n *     {\r\n *       version : 3,\r\n *       file: \"out.js\",\r\n *       sourceRoot : \"\",\r\n *       sources: [\"foo.js\", \"bar.js\"],\r\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\r\n *       mappings: \"AA,AB;;ABCDE;\"\r\n *     }\r\n *\r\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\r\n */\r\nfunction BasicSourceMapConsumer(aSourceMap) {\r\n  var sourceMap = aSourceMap;\r\n  if (typeof aSourceMap === 'string') {\r\n    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\r\n  }\r\n\r\n  var version = util.getArg(sourceMap, 'version');\r\n  var sources = util.getArg(sourceMap, 'sources');\r\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\r\n  // requires the array) to play nice here.\r\n  var names = util.getArg(sourceMap, 'names', []);\r\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\r\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\r\n  var mappings = util.getArg(sourceMap, 'mappings');\r\n  var file = util.getArg(sourceMap, 'file', null);\r\n\r\n  // Once again, Sass deviates from the spec and supplies the version as a\r\n  // string rather than a number, so we use loose equality checking here.\r\n  if (version != this._version) {\r\n    throw new Error('Unsupported version: ' + version);\r\n  }\r\n\r\n  sources = sources\r\n    .map(String)\r\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\r\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\r\n    // See bugzil.la/1090768.\r\n    .map(util.normalize)\r\n    // Always ensure that absolute sources are internally stored relative to\r\n    // the source root, if the source root is absolute. Not doing this would\r\n    // be particularly problematic when the source root is a prefix of the\r\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\r\n    .map(function (source) {\r\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\r\n        ? util.relative(sourceRoot, source)\r\n        : source;\r\n    });\r\n\r\n  // Pass `true` below to allow duplicate names and sources. While source maps\r\n  // are intended to be compressed and deduplicated, the TypeScript compiler\r\n  // sometimes generates source maps with duplicates in them. See Github issue\r\n  // #72 and bugzil.la/889492.\r\n  this._names = ArraySet.fromArray(names.map(String), true);\r\n  this._sources = ArraySet.fromArray(sources, true);\r\n\r\n  this.sourceRoot = sourceRoot;\r\n  this.sourcesContent = sourcesContent;\r\n  this._mappings = mappings;\r\n  this.file = file;\r\n}\r\n\r\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\r\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\r\n\r\n/**\r\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\r\n *\r\n * @param SourceMapGenerator aSourceMap\r\n *        The source map that will be consumed.\r\n * @returns BasicSourceMapConsumer\r\n */\r\nBasicSourceMapConsumer.fromSourceMap =\r\n  function SourceMapConsumer_fromSourceMap(aSourceMap) {\r\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\r\n\r\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\r\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\r\n    smc.sourceRoot = aSourceMap._sourceRoot;\r\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\r\n                                                            smc.sourceRoot);\r\n    smc.file = aSourceMap._file;\r\n\r\n    // Because we are modifying the entries (by converting string sources and\r\n    // names to indices into the sources and names ArraySets), we have to make\r\n    // a copy of the entry or else bad things happen. Shared mutable state\r\n    // strikes again! See github issue #191.\r\n\r\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\r\n    var destGeneratedMappings = smc.__generatedMappings = [];\r\n    var destOriginalMappings = smc.__originalMappings = [];\r\n\r\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\r\n      var srcMapping = generatedMappings[i];\r\n      var destMapping = new Mapping;\r\n      destMapping.generatedLine = srcMapping.generatedLine;\r\n      destMapping.generatedColumn = srcMapping.generatedColumn;\r\n\r\n      if (srcMapping.source) {\r\n        destMapping.source = sources.indexOf(srcMapping.source);\r\n        destMapping.originalLine = srcMapping.originalLine;\r\n        destMapping.originalColumn = srcMapping.originalColumn;\r\n\r\n        if (srcMapping.name) {\r\n          destMapping.name = names.indexOf(srcMapping.name);\r\n        }\r\n\r\n        destOriginalMappings.push(destMapping);\r\n      }\r\n\r\n      destGeneratedMappings.push(destMapping);\r\n    }\r\n\r\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\r\n\r\n    return smc;\r\n  };\r\n\r\n/**\r\n * The version of the source mapping spec that we are consuming.\r\n */\r\nBasicSourceMapConsumer.prototype._version = 3;\r\n\r\n/**\r\n * The list of original sources.\r\n */\r\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\r\n  get: function () {\r\n    return this._sources.toArray().map(function (s) {\r\n      return this.sourceRoot != null ? util.join(this.sourceRoot, s) : s;\r\n    }, this);\r\n  }\r\n});\r\n\r\n/**\r\n * Provide the JIT with a nice shape / hidden class.\r\n */\r\nfunction Mapping() {\r\n  this.generatedLine = 0;\r\n  this.generatedColumn = 0;\r\n  this.source = null;\r\n  this.originalLine = null;\r\n  this.originalColumn = null;\r\n  this.name = null;\r\n}\r\n\r\n/**\r\n * Parse the mappings in a string in to a data structure which we can easily\r\n * query (the ordered arrays in the `this.__generatedMappings` and\r\n * `this.__originalMappings` properties).\r\n */\r\nBasicSourceMapConsumer.prototype._parseMappings =\r\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\r\n    var generatedLine = 1;\r\n    var previousGeneratedColumn = 0;\r\n    var previousOriginalLine = 0;\r\n    var previousOriginalColumn = 0;\r\n    var previousSource = 0;\r\n    var previousName = 0;\r\n    var length = aStr.length;\r\n    var index = 0;\r\n    var cachedSegments = {};\r\n    var temp = {};\r\n    var originalMappings = [];\r\n    var generatedMappings = [];\r\n    var mapping, str, segment, end, value;\r\n\r\n    while (index < length) {\r\n      if (aStr.charAt(index) === ';') {\r\n        generatedLine++;\r\n        index++;\r\n        previousGeneratedColumn = 0;\r\n      }\r\n      else if (aStr.charAt(index) === ',') {\r\n        index++;\r\n      }\r\n      else {\r\n        mapping = new Mapping();\r\n        mapping.generatedLine = generatedLine;\r\n\r\n        // Because each offset is encoded relative to the previous one,\r\n        // many segments often have the same encoding. We can exploit this\r\n        // fact by caching the parsed variable length fields of each segment,\r\n        // allowing us to avoid a second parse if we encounter the same\r\n        // segment again.\r\n        for (end = index; end < length; end++) {\r\n          if (this._charIsMappingSeparator(aStr, end)) {\r\n            break;\r\n          }\r\n        }\r\n        str = aStr.slice(index, end);\r\n\r\n        segment = cachedSegments[str];\r\n        if (segment) {\r\n          index += str.length;\r\n        } else {\r\n          segment = [];\r\n          while (index < end) {\r\n            base64VLQ.decode(aStr, index, temp);\r\n            value = temp.value;\r\n            index = temp.rest;\r\n            segment.push(value);\r\n          }\r\n\r\n          if (segment.length === 2) {\r\n            throw new Error('Found a source, but no line and column');\r\n          }\r\n\r\n          if (segment.length === 3) {\r\n            throw new Error('Found a source and line, but no column');\r\n          }\r\n\r\n          cachedSegments[str] = segment;\r\n        }\r\n\r\n        // Generated column.\r\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\r\n        previousGeneratedColumn = mapping.generatedColumn;\r\n\r\n        if (segment.length > 1) {\r\n          // Original source.\r\n          mapping.source = previousSource + segment[1];\r\n          previousSource += segment[1];\r\n\r\n          // Original line.\r\n          mapping.originalLine = previousOriginalLine + segment[2];\r\n          previousOriginalLine = mapping.originalLine;\r\n          // Lines are stored 0-based\r\n          mapping.originalLine += 1;\r\n\r\n          // Original column.\r\n          mapping.originalColumn = previousOriginalColumn + segment[3];\r\n          previousOriginalColumn = mapping.originalColumn;\r\n\r\n          if (segment.length > 4) {\r\n            // Original name.\r\n            mapping.name = previousName + segment[4];\r\n            previousName += segment[4];\r\n          }\r\n        }\r\n\r\n        generatedMappings.push(mapping);\r\n        if (typeof mapping.originalLine === 'number') {\r\n          originalMappings.push(mapping);\r\n        }\r\n      }\r\n    }\r\n\r\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\r\n    this.__generatedMappings = generatedMappings;\r\n\r\n    quickSort(originalMappings, util.compareByOriginalPositions);\r\n    this.__originalMappings = originalMappings;\r\n  };\r\n\r\n/**\r\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\r\n * we are searching for in the given \"haystack\" of mappings.\r\n */\r\nBasicSourceMapConsumer.prototype._findMapping =\r\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\r\n                                         aColumnName, aComparator, aBias) {\r\n    // To return the position we are searching for, we must first find the\r\n    // mapping for the given position and then return the opposite position it\r\n    // points to. Because the mappings are sorted, we can use binary search to\r\n    // find the best mapping.\r\n\r\n    if (aNeedle[aLineName] <= 0) {\r\n      throw new TypeError('Line must be greater than or equal to 1, got '\r\n                          + aNeedle[aLineName]);\r\n    }\r\n    if (aNeedle[aColumnName] < 0) {\r\n      throw new TypeError('Column must be greater than or equal to 0, got '\r\n                          + aNeedle[aColumnName]);\r\n    }\r\n\r\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\r\n  };\r\n\r\n/**\r\n * Compute the last column for each generated mapping. The last column is\r\n * inclusive.\r\n */\r\nBasicSourceMapConsumer.prototype.computeColumnSpans =\r\n  function SourceMapConsumer_computeColumnSpans() {\r\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\r\n      var mapping = this._generatedMappings[index];\r\n\r\n      // Mappings do not contain a field for the last generated columnt. We\r\n      // can come up with an optimistic estimate, however, by assuming that\r\n      // mappings are contiguous (i.e. given two consecutive mappings, the\r\n      // first mapping ends where the second one starts).\r\n      if (index + 1 < this._generatedMappings.length) {\r\n        var nextMapping = this._generatedMappings[index + 1];\r\n\r\n        if (mapping.generatedLine === nextMapping.generatedLine) {\r\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\r\n          continue;\r\n        }\r\n      }\r\n\r\n      // The last mapping for each line spans the entire line.\r\n      mapping.lastGeneratedColumn = Infinity;\r\n    }\r\n  };\r\n\r\n/**\r\n * Returns the original source, line, and column information for the generated\r\n * source's line and column positions provided. The only argument is an object\r\n * with the following properties:\r\n *\r\n *   - line: The line number in the generated source.\r\n *   - column: The column number in the generated source.\r\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\r\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\r\n *     closest element that is smaller than or greater than the one we are\r\n *     searching for, respectively, if the exact element cannot be found.\r\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\r\n *\r\n * and an object is returned with the following properties:\r\n *\r\n *   - source: The original source file, or null.\r\n *   - line: The line number in the original source, or null.\r\n *   - column: The column number in the original source, or null.\r\n *   - name: The original identifier, or null.\r\n */\r\nBasicSourceMapConsumer.prototype.originalPositionFor =\r\n  function SourceMapConsumer_originalPositionFor(aArgs) {\r\n    var needle = {\r\n      generatedLine: util.getArg(aArgs, 'line'),\r\n      generatedColumn: util.getArg(aArgs, 'column')\r\n    };\r\n\r\n    var index = this._findMapping(\r\n      needle,\r\n      this._generatedMappings,\r\n      \"generatedLine\",\r\n      \"generatedColumn\",\r\n      util.compareByGeneratedPositionsDeflated,\r\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\r\n    );\r\n\r\n    if (index >= 0) {\r\n      var mapping = this._generatedMappings[index];\r\n\r\n      if (mapping.generatedLine === needle.generatedLine) {\r\n        var source = util.getArg(mapping, 'source', null);\r\n        if (source !== null) {\r\n          source = this._sources.at(source);\r\n          if (this.sourceRoot != null) {\r\n            source = util.join(this.sourceRoot, source);\r\n          }\r\n        }\r\n        var name = util.getArg(mapping, 'name', null);\r\n        if (name !== null) {\r\n          name = this._names.at(name);\r\n        }\r\n        return {\r\n          source: source,\r\n          line: util.getArg(mapping, 'originalLine', null),\r\n          column: util.getArg(mapping, 'originalColumn', null),\r\n          name: name\r\n        };\r\n      }\r\n    }\r\n\r\n    return {\r\n      source: null,\r\n      line: null,\r\n      column: null,\r\n      name: null\r\n    };\r\n  };\r\n\r\n/**\r\n * Return true if we have the source content for every source in the source\r\n * map, false otherwise.\r\n */\r\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\r\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\r\n    if (!this.sourcesContent) {\r\n      return false;\r\n    }\r\n    return this.sourcesContent.length >= this._sources.size() &&\r\n      !this.sourcesContent.some(function (sc) { return sc == null; });\r\n  };\r\n\r\n/**\r\n * Returns the original source content. The only argument is the url of the\r\n * original source file. Returns null if no original source content is\r\n * available.\r\n */\r\nBasicSourceMapConsumer.prototype.sourceContentFor =\r\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\r\n    if (!this.sourcesContent) {\r\n      return null;\r\n    }\r\n\r\n    if (this.sourceRoot != null) {\r\n      aSource = util.relative(this.sourceRoot, aSource);\r\n    }\r\n\r\n    if (this._sources.has(aSource)) {\r\n      return this.sourcesContent[this._sources.indexOf(aSource)];\r\n    }\r\n\r\n    var url;\r\n    if (this.sourceRoot != null\r\n        && (url = util.urlParse(this.sourceRoot))) {\r\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\r\n      // many users. We can help them out when they expect file:// URIs to\r\n      // behave like it would if they were running a local HTTP server. See\r\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\r\n      var fileUriAbsPath = aSource.replace(/^file:\\/\\//, \"\");\r\n      if (url.scheme == \"file\"\r\n          && this._sources.has(fileUriAbsPath)) {\r\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\r\n      }\r\n\r\n      if ((!url.path || url.path == \"/\")\r\n          && this._sources.has(\"/\" + aSource)) {\r\n        return this.sourcesContent[this._sources.indexOf(\"/\" + aSource)];\r\n      }\r\n    }\r\n\r\n    // This function is used recursively from\r\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\r\n    // don't want to throw if we can't find the source - we just want to\r\n    // return null, so we provide a flag to exit gracefully.\r\n    if (nullOnMissing) {\r\n      return null;\r\n    }\r\n    else {\r\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\r\n    }\r\n  };\r\n\r\n/**\r\n * Returns the generated line and column information for the original source,\r\n * line, and column positions provided. The only argument is an object with\r\n * the following properties:\r\n *\r\n *   - source: The filename of the original source.\r\n *   - line: The line number in the original source.\r\n *   - column: The column number in the original source.\r\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\r\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\r\n *     closest element that is smaller than or greater than the one we are\r\n *     searching for, respectively, if the exact element cannot be found.\r\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\r\n *\r\n * and an object is returned with the following properties:\r\n *\r\n *   - line: The line number in the generated source, or null.\r\n *   - column: The column number in the generated source, or null.\r\n */\r\nBasicSourceMapConsumer.prototype.generatedPositionFor =\r\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\r\n    var source = util.getArg(aArgs, 'source');\r\n    if (this.sourceRoot != null) {\r\n      source = util.relative(this.sourceRoot, source);\r\n    }\r\n    if (!this._sources.has(source)) {\r\n      return {\r\n        line: null,\r\n        column: null,\r\n        lastColumn: null\r\n      };\r\n    }\r\n    source = this._sources.indexOf(source);\r\n\r\n    var needle = {\r\n      source: source,\r\n      originalLine: util.getArg(aArgs, 'line'),\r\n      originalColumn: util.getArg(aArgs, 'column')\r\n    };\r\n\r\n    var index = this._findMapping(\r\n      needle,\r\n      this._originalMappings,\r\n      \"originalLine\",\r\n      \"originalColumn\",\r\n      util.compareByOriginalPositions,\r\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\r\n    );\r\n\r\n    if (index >= 0) {\r\n      var mapping = this._originalMappings[index];\r\n\r\n      if (mapping.source === needle.source) {\r\n        return {\r\n          line: util.getArg(mapping, 'generatedLine', null),\r\n          column: util.getArg(mapping, 'generatedColumn', null),\r\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\r\n        };\r\n      }\r\n    }\r\n\r\n    return {\r\n      line: null,\r\n      column: null,\r\n      lastColumn: null\r\n    };\r\n  };\r\n\r\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\r\n\r\n/**\r\n * An IndexedSourceMapConsumer instance represents a parsed source map which\r\n * we can query for information. It differs from BasicSourceMapConsumer in\r\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\r\n * input.\r\n *\r\n * The only parameter is a raw source map (either as a JSON string, or already\r\n * parsed to an object). According to the spec for indexed source maps, they\r\n * have the following attributes:\r\n *\r\n *   - version: Which version of the source map spec this map is following.\r\n *   - file: Optional. The generated file this source map is associated with.\r\n *   - sections: A list of section definitions.\r\n *\r\n * Each value under the \"sections\" field has two fields:\r\n *   - offset: The offset into the original specified at which this section\r\n *       begins to apply, defined as an object with a \"line\" and \"column\"\r\n *       field.\r\n *   - map: A source map definition. This source map could also be indexed,\r\n *       but doesn't have to be.\r\n *\r\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\r\n * specifying a URL to retrieve a source map from, but that's currently\r\n * unsupported.\r\n *\r\n * Here's an example source map, taken from the source map spec[0], but\r\n * modified to omit a section which uses the \"url\" field.\r\n *\r\n *  {\r\n *    version : 3,\r\n *    file: \"app.js\",\r\n *    sections: [{\r\n *      offset: {line:100, column:10},\r\n *      map: {\r\n *        version : 3,\r\n *        file: \"section.js\",\r\n *        sources: [\"foo.js\", \"bar.js\"],\r\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\r\n *        mappings: \"AAAA,E;;ABCDE;\"\r\n *      }\r\n *    }],\r\n *  }\r\n *\r\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\r\n */\r\nfunction IndexedSourceMapConsumer(aSourceMap) {\r\n  var sourceMap = aSourceMap;\r\n  if (typeof aSourceMap === 'string') {\r\n    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\r\n  }\r\n\r\n  var version = util.getArg(sourceMap, 'version');\r\n  var sections = util.getArg(sourceMap, 'sections');\r\n\r\n  if (version != this._version) {\r\n    throw new Error('Unsupported version: ' + version);\r\n  }\r\n\r\n  this._sources = new ArraySet();\r\n  this._names = new ArraySet();\r\n\r\n  var lastOffset = {\r\n    line: -1,\r\n    column: 0\r\n  };\r\n  this._sections = sections.map(function (s) {\r\n    if (s.url) {\r\n      // The url field will require support for asynchronicity.\r\n      // See https://github.com/mozilla/source-map/issues/16\r\n      throw new Error('Support for url field in sections not implemented.');\r\n    }\r\n    var offset = util.getArg(s, 'offset');\r\n    var offsetLine = util.getArg(offset, 'line');\r\n    var offsetColumn = util.getArg(offset, 'column');\r\n\r\n    if (offsetLine < lastOffset.line ||\r\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\r\n      throw new Error('Section offsets must be ordered and non-overlapping.');\r\n    }\r\n    lastOffset = offset;\r\n\r\n    return {\r\n      generatedOffset: {\r\n        // The offset fields are 0-based, but we use 1-based indices when\r\n        // encoding/decoding from VLQ.\r\n        generatedLine: offsetLine + 1,\r\n        generatedColumn: offsetColumn + 1\r\n      },\r\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'))\r\n    }\r\n  });\r\n}\r\n\r\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\r\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\r\n\r\n/**\r\n * The version of the source mapping spec that we are consuming.\r\n */\r\nIndexedSourceMapConsumer.prototype._version = 3;\r\n\r\n/**\r\n * The list of original sources.\r\n */\r\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\r\n  get: function () {\r\n    var sources = [];\r\n    for (var i = 0; i < this._sections.length; i++) {\r\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\r\n        sources.push(this._sections[i].consumer.sources[j]);\r\n      }\r\n    }\r\n    return sources;\r\n  }\r\n});\r\n\r\n/**\r\n * Returns the original source, line, and column information for the generated\r\n * source's line and column positions provided. The only argument is an object\r\n * with the following properties:\r\n *\r\n *   - line: The line number in the generated source.\r\n *   - column: The column number in the generated source.\r\n *\r\n * and an object is returned with the following properties:\r\n *\r\n *   - source: The original source file, or null.\r\n *   - line: The line number in the original source, or null.\r\n *   - column: The column number in the original source, or null.\r\n *   - name: The original identifier, or null.\r\n */\r\nIndexedSourceMapConsumer.prototype.originalPositionFor =\r\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\r\n    var needle = {\r\n      generatedLine: util.getArg(aArgs, 'line'),\r\n      generatedColumn: util.getArg(aArgs, 'column')\r\n    };\r\n\r\n    // Find the section containing the generated position we're trying to map\r\n    // to an original position.\r\n    var sectionIndex = binarySearch.search(needle, this._sections,\r\n      function(needle, section) {\r\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\r\n        if (cmp) {\r\n          return cmp;\r\n        }\r\n\r\n        return (needle.generatedColumn -\r\n                section.generatedOffset.generatedColumn);\r\n      });\r\n    var section = this._sections[sectionIndex];\r\n\r\n    if (!section) {\r\n      return {\r\n        source: null,\r\n        line: null,\r\n        column: null,\r\n        name: null\r\n      };\r\n    }\r\n\r\n    return section.consumer.originalPositionFor({\r\n      line: needle.generatedLine -\r\n        (section.generatedOffset.generatedLine - 1),\r\n      column: needle.generatedColumn -\r\n        (section.generatedOffset.generatedLine === needle.generatedLine\r\n         ? section.generatedOffset.generatedColumn - 1\r\n         : 0),\r\n      bias: aArgs.bias\r\n    });\r\n  };\r\n\r\n/**\r\n * Return true if we have the source content for every source in the source\r\n * map, false otherwise.\r\n */\r\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\r\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\r\n    return this._sections.every(function (s) {\r\n      return s.consumer.hasContentsOfAllSources();\r\n    });\r\n  };\r\n\r\n/**\r\n * Returns the original source content. The only argument is the url of the\r\n * original source file. Returns null if no original source content is\r\n * available.\r\n */\r\nIndexedSourceMapConsumer.prototype.sourceContentFor =\r\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\r\n    for (var i = 0; i < this._sections.length; i++) {\r\n      var section = this._sections[i];\r\n\r\n      var content = section.consumer.sourceContentFor(aSource, true);\r\n      if (content) {\r\n        return content;\r\n      }\r\n    }\r\n    if (nullOnMissing) {\r\n      return null;\r\n    }\r\n    else {\r\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\r\n    }\r\n  };\r\n\r\n/**\r\n * Returns the generated line and column information for the original source,\r\n * line, and column positions provided. The only argument is an object with\r\n * the following properties:\r\n *\r\n *   - source: The filename of the original source.\r\n *   - line: The line number in the original source.\r\n *   - column: The column number in the original source.\r\n *\r\n * and an object is returned with the following properties:\r\n *\r\n *   - line: The line number in the generated source, or null.\r\n *   - column: The column number in the generated source, or null.\r\n */\r\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\r\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\r\n    for (var i = 0; i < this._sections.length; i++) {\r\n      var section = this._sections[i];\r\n\r\n      // Only consider this section if the requested source is in the list of\r\n      // sources of the consumer.\r\n      if (section.consumer.sources.indexOf(util.getArg(aArgs, 'source')) === -1) {\r\n        continue;\r\n      }\r\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\r\n      if (generatedPosition) {\r\n        var ret = {\r\n          line: generatedPosition.line +\r\n            (section.generatedOffset.generatedLine - 1),\r\n          column: generatedPosition.column +\r\n            (section.generatedOffset.generatedLine === generatedPosition.line\r\n             ? section.generatedOffset.generatedColumn - 1\r\n             : 0)\r\n        };\r\n        return ret;\r\n      }\r\n    }\r\n\r\n    return {\r\n      line: null,\r\n      column: null\r\n    };\r\n  };\r\n\r\n/**\r\n * Parse the mappings in a string in to a data structure which we can easily\r\n * query (the ordered arrays in the `this.__generatedMappings` and\r\n * `this.__originalMappings` properties).\r\n */\r\nIndexedSourceMapConsumer.prototype._parseMappings =\r\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\r\n    this.__generatedMappings = [];\r\n    this.__originalMappings = [];\r\n    for (var i = 0; i < this._sections.length; i++) {\r\n      var section = this._sections[i];\r\n      var sectionMappings = section.consumer._generatedMappings;\r\n      for (var j = 0; j < sectionMappings.length; j++) {\r\n        var mapping = sectionMappings[j];\r\n\r\n        var source = section.consumer._sources.at(mapping.source);\r\n        if (section.consumer.sourceRoot !== null) {\r\n          source = util.join(section.consumer.sourceRoot, source);\r\n        }\r\n        this._sources.add(source);\r\n        source = this._sources.indexOf(source);\r\n\r\n        var name = section.consumer._names.at(mapping.name);\r\n        this._names.add(name);\r\n        name = this._names.indexOf(name);\r\n\r\n        // The mappings coming from the consumer for the section have\r\n        // generated positions relative to the start of the section, so we\r\n        // need to offset them to be relative to the start of the concatenated\r\n        // generated file.\r\n        var adjustedMapping = {\r\n          source: source,\r\n          generatedLine: mapping.generatedLine +\r\n            (section.generatedOffset.generatedLine - 1),\r\n          generatedColumn: mapping.generatedColumn +\r\n            (section.generatedOffset.generatedLine === mapping.generatedLine\r\n            ? section.generatedOffset.generatedColumn - 1\r\n            : 0),\r\n          originalLine: mapping.originalLine,\r\n          originalColumn: mapping.originalColumn,\r\n          name: name\r\n        };\r\n\r\n        this.__generatedMappings.push(adjustedMapping);\r\n        if (typeof adjustedMapping.originalLine === 'number') {\r\n          this.__originalMappings.push(adjustedMapping);\r\n        }\r\n      }\r\n    }\r\n\r\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\r\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\r\n  };\r\n\r\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\r\n", "(function(root, factory) {\r\n    'use strict';\r\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\r\n\r\n    /* istanbul ignore next */\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('stacktrace-gps', ['source-map', 'stackframe'], factory);\r\n    } else if (typeof exports === 'object') {\r\n        module.exports = factory(require('source-map/lib/source-map-consumer'), require('stackframe'));\r\n    } else {\r\n        root.StackTraceGPS = factory(root.SourceMap || root.sourceMap, root.StackFrame);\r\n    }\r\n}(this, function(SourceMap, StackFrame) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Make a X-Domain request to url and callback.\r\n     *\r\n     * @param {String} url\r\n     * @returns {Promise} with response text if fulfilled\r\n     */\r\n    function _xdr(url) {\r\n        return new Promise(function(resolve, reject) {\r\n            var req = new XMLHttpRequest();\r\n            req.open('get', url);\r\n            req.onerror = reject;\r\n            req.onreadystatechange = function onreadystatechange() {\r\n                if (req.readyState === 4) {\r\n                    if ((req.status >= 200 && req.status < 300) ||\r\n                        (url.substr(0, 7) === 'file://' && req.responseText)) {\r\n                        resolve(req.responseText);\r\n                    } else {\r\n                        reject(new Error('HTTP status: ' + req.status + ' retrieving ' + url));\r\n                    }\r\n                }\r\n            };\r\n            req.send();\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * Convert a Base64-encoded string into its original representation.\r\n     * Used for inline sourcemaps.\r\n     *\r\n     * @param {String} b64str Base-64 encoded string\r\n     * @returns {String} original representation of the base64-encoded string.\r\n     */\r\n    function _atob(b64str) {\r\n        if (typeof window !== 'undefined' && window.atob) {\r\n            return window.atob(b64str);\r\n        } else {\r\n            throw new Error('You must supply a polyfill for window.atob in this environment');\r\n        }\r\n    }\r\n\r\n    function _parseJson(string) {\r\n        if (typeof JSON !== 'undefined' && JSON.parse) {\r\n            return JSON.parse(string);\r\n        } else {\r\n            throw new Error('You must supply a polyfill for JSON.parse in this environment');\r\n        }\r\n    }\r\n\r\n    function _findFunctionName(source, lineNumber/*, columnNumber*/) {\r\n        var syntaxes = [\r\n            // {name} = function ({args}) TODO args capture\r\n            /['\"]?([$_A-Za-z][$_A-Za-z0-9]*)['\"]?\\s*[:=]\\s*function\\b/,\r\n            // function {name}({args}) m[1]=name m[2]=args\r\n            /function\\s+([^('\"`]*?)\\s*\\(([^)]*)\\)/,\r\n            // {name} = eval()\r\n            /['\"]?([$_A-Za-z][$_A-Za-z0-9]*)['\"]?\\s*[:=]\\s*(?:eval|new Function)\\b/,\r\n            // fn_name() {\r\n            /\\b(?!(?:if|for|switch|while|with|catch)\\b)(?:(?:static)\\s+)?(\\S+)\\s*\\(.*?\\)\\s*\\{/,\r\n            // {name} = () => {\r\n            /['\"]?([$_A-Za-z][$_A-Za-z0-9]*)['\"]?\\s*[:=]\\s*\\(.*?\\)\\s*=>/\r\n        ];\r\n        var lines = source.split('\\n');\r\n\r\n        // Walk backwards in the source lines until we find the line which matches one of the patterns above\r\n        var code = '';\r\n        var maxLines = Math.min(lineNumber, 20);\r\n        for (var i = 0; i < maxLines; ++i) {\r\n            // lineNo is 1-based, source[] is 0-based\r\n            var line = lines[lineNumber - i - 1];\r\n            var commentPos = line.indexOf('//');\r\n            if (commentPos >= 0) {\r\n                line = line.substr(0, commentPos);\r\n            }\r\n\r\n            if (line) {\r\n                code = line + code;\r\n                var len = syntaxes.length;\r\n                for (var index = 0; index < len; index++) {\r\n                    var m = syntaxes[index].exec(code);\r\n                    if (m && m[1]) {\r\n                        return m[1];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    function _ensureSupportedEnvironment() {\r\n        if (typeof Object.defineProperty !== 'function' || typeof Object.create !== 'function') {\r\n            throw new Error('Unable to consume source maps in older browsers');\r\n        }\r\n    }\r\n\r\n    function _ensureStackFrameIsLegit(stackframe) {\r\n        if (typeof stackframe !== 'object') {\r\n            throw new TypeError('Given StackFrame is not an object');\r\n        } else if (typeof stackframe.fileName !== 'string') {\r\n            throw new TypeError('Given file name is not a String');\r\n        } else if (typeof stackframe.lineNumber !== 'number' ||\r\n            stackframe.lineNumber % 1 !== 0 ||\r\n            stackframe.lineNumber < 1) {\r\n            throw new TypeError('Given line number must be a positive integer');\r\n        } else if (typeof stackframe.columnNumber !== 'number' ||\r\n            stackframe.columnNumber % 1 !== 0 ||\r\n            stackframe.columnNumber < 0) {\r\n            throw new TypeError('Given column number must be a non-negative integer');\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function _findSourceMappingURL(source) {\r\n        var sourceMappingUrlRegExp = /\\/\\/[#@] ?sourceMappingURL=([^\\s'\"]+)\\s*$/mg;\r\n        var lastSourceMappingUrl;\r\n        var matchSourceMappingUrl;\r\n        // eslint-disable-next-line no-cond-assign\r\n        while (matchSourceMappingUrl = sourceMappingUrlRegExp.exec(source)) {\r\n            lastSourceMappingUrl = matchSourceMappingUrl[1];\r\n        }\r\n        if (lastSourceMappingUrl) {\r\n            return lastSourceMappingUrl;\r\n        } else {\r\n            throw new Error('sourceMappingURL not found');\r\n        }\r\n    }\r\n\r\n    function _extractLocationInfoFromSourceMapSource(stackframe, sourceMapConsumer, sourceCache) {\r\n        return new Promise(function(resolve, reject) {\r\n            var loc = sourceMapConsumer.originalPositionFor({\r\n                line: stackframe.lineNumber,\r\n                column: stackframe.columnNumber\r\n            });\r\n\r\n            if (loc.source) {\r\n                // cache mapped sources\r\n                var mappedSource = sourceMapConsumer.sourceContentFor(loc.source);\r\n                if (mappedSource) {\r\n                    sourceCache[loc.source] = mappedSource;\r\n                }\r\n\r\n                resolve(\r\n                    // given stackframe and source location, update stackframe\r\n                    new StackFrame({\r\n                        functionName: loc.name || stackframe.functionName,\r\n                        args: stackframe.args,\r\n                        fileName: loc.source,\r\n                        lineNumber: loc.line,\r\n                        columnNumber: loc.column\r\n                    }));\r\n            } else {\r\n                reject(new Error('Could not get original source for given stackframe and source map'));\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {Object} opts\r\n     *      opts.sourceCache = {url: \"Source String\"} => preload source cache\r\n     *      opts.sourceMapConsumerCache = {/path/file.js.map: SourceMapConsumer}\r\n     *      opts.offline = True to prevent network requests.\r\n     *              Best effort without sources or source maps.\r\n     *      opts.ajax = Promise returning function to make X-Domain requests\r\n     */\r\n    return function StackTraceGPS(opts) {\r\n        if (!(this instanceof StackTraceGPS)) {\r\n            return new StackTraceGPS(opts);\r\n        }\r\n        opts = opts || {};\r\n\r\n        this.sourceCache = opts.sourceCache || {};\r\n        this.sourceMapConsumerCache = opts.sourceMapConsumerCache || {};\r\n\r\n        this.ajax = opts.ajax || _xdr;\r\n\r\n        this._atob = opts.atob || _atob;\r\n\r\n        this._get = function _get(location) {\r\n            return new Promise(function(resolve, reject) {\r\n                var isDataUrl = location.substr(0, 5) === 'data:';\r\n                if (this.sourceCache[location]) {\r\n                    resolve(this.sourceCache[location]);\r\n                } else if (opts.offline && !isDataUrl) {\r\n                    reject(new Error('Cannot make network requests in offline mode'));\r\n                } else {\r\n                    if (isDataUrl) {\r\n                        // data URLs can have parameters.\r\n                        // see http://tools.ietf.org/html/rfc2397\r\n                        var supportedEncodingRegexp =\r\n                            /^data:application\\/json;([\\w=:\"-]+;)*base64,/;\r\n                        var match = location.match(supportedEncodingRegexp);\r\n                        if (match) {\r\n                            var sourceMapStart = match[0].length;\r\n                            var encodedSource = location.substr(sourceMapStart);\r\n                            var source = this._atob(encodedSource);\r\n                            this.sourceCache[location] = source;\r\n                            resolve(source);\r\n                        } else {\r\n                            reject(new Error('The encoding of the inline sourcemap is not supported'));\r\n                        }\r\n                    } else {\r\n                        var xhrPromise = this.ajax(location, {method: 'get'});\r\n                        // Cache the Promise to prevent duplicate in-flight requests\r\n                        this.sourceCache[location] = xhrPromise;\r\n                        xhrPromise.then(resolve, reject);\r\n                    }\r\n                }\r\n            }.bind(this));\r\n        };\r\n\r\n        /**\r\n         * Creating SourceMapConsumers is expensive, so this wraps the creation of a\r\n         * SourceMapConsumer in a per-instance cache.\r\n         *\r\n         * @param {String} sourceMappingURL = URL to fetch source map from\r\n         * @param {String} defaultSourceRoot = Default source root for source map if undefined\r\n         * @returns {Promise} that resolves a SourceMapConsumer\r\n         */\r\n        this._getSourceMapConsumer = function _getSourceMapConsumer(sourceMappingURL, defaultSourceRoot) {\r\n            return new Promise(function(resolve) {\r\n                if (this.sourceMapConsumerCache[sourceMappingURL]) {\r\n                    resolve(this.sourceMapConsumerCache[sourceMappingURL]);\r\n                } else {\r\n                    var sourceMapConsumerPromise = new Promise(function(resolve, reject) {\r\n                        return this._get(sourceMappingURL).then(function(sourceMapSource) {\r\n                            if (typeof sourceMapSource === 'string') {\r\n                                sourceMapSource = _parseJson(sourceMapSource.replace(/^\\)\\]\\}'/, ''));\r\n                            }\r\n                            if (typeof sourceMapSource.sourceRoot === 'undefined') {\r\n                                sourceMapSource.sourceRoot = defaultSourceRoot;\r\n                            }\r\n\r\n                            resolve(new SourceMap.SourceMapConsumer(sourceMapSource));\r\n                        }, reject);\r\n                    }.bind(this));\r\n                    this.sourceMapConsumerCache[sourceMappingURL] = sourceMapConsumerPromise;\r\n                    resolve(sourceMapConsumerPromise);\r\n                }\r\n            }.bind(this));\r\n        };\r\n\r\n        /**\r\n         * Given a StackFrame, enhance function name and use source maps for a\r\n         * better StackFrame.\r\n         *\r\n         * @param {StackFrame} stackframe object\r\n         * @returns {Promise} that resolves with with source-mapped StackFrame\r\n         */\r\n        this.pinpoint = function StackTraceGPS$$pinpoint(stackframe) {\r\n            return new Promise(function(resolve, reject) {\r\n                this.getMappedLocation(stackframe).then(function(mappedStackFrame) {\r\n                    function resolveMappedStackFrame() {\r\n                        resolve(mappedStackFrame);\r\n                    }\r\n\r\n                    this.findFunctionName(mappedStackFrame)\r\n                        .then(resolve, resolveMappedStackFrame)\r\n                        // eslint-disable-next-line no-unexpected-multiline\r\n                        ['catch'](resolveMappedStackFrame);\r\n                }.bind(this), reject);\r\n            }.bind(this));\r\n        };\r\n\r\n        /**\r\n         * Given a StackFrame, guess function name from location information.\r\n         *\r\n         * @param {StackFrame} stackframe\r\n         * @returns {Promise} that resolves with enhanced StackFrame.\r\n         */\r\n        this.findFunctionName = function StackTraceGPS$$findFunctionName(stackframe) {\r\n            return new Promise(function(resolve, reject) {\r\n                _ensureStackFrameIsLegit(stackframe);\r\n                this._get(stackframe.fileName).then(function getSourceCallback(source) {\r\n                    var lineNumber = stackframe.lineNumber;\r\n                    var columnNumber = stackframe.columnNumber;\r\n                    var guessedFunctionName = _findFunctionName(source, lineNumber, columnNumber);\r\n                    // Only replace functionName if we found something\r\n                    if (guessedFunctionName) {\r\n                        resolve(new StackFrame({\r\n                            functionName: guessedFunctionName,\r\n                            args: stackframe.args,\r\n                            fileName: stackframe.fileName,\r\n                            lineNumber: lineNumber,\r\n                            columnNumber: columnNumber\r\n                        }));\r\n                    } else {\r\n                        resolve(stackframe);\r\n                    }\r\n                }, reject)['catch'](reject);\r\n            }.bind(this));\r\n        };\r\n\r\n        /**\r\n         * Given a StackFrame, seek source-mapped location and return new enhanced StackFrame.\r\n         *\r\n         * @param {StackFrame} stackframe\r\n         * @returns {Promise} that resolves with enhanced StackFrame.\r\n         */\r\n        this.getMappedLocation = function StackTraceGPS$$getMappedLocation(stackframe) {\r\n            return new Promise(function(resolve, reject) {\r\n                _ensureSupportedEnvironment();\r\n                _ensureStackFrameIsLegit(stackframe);\r\n\r\n                var sourceCache = this.sourceCache;\r\n                var fileName = stackframe.fileName;\r\n                this._get(fileName).then(function(source) {\r\n                    var sourceMappingURL = _findSourceMappingURL(source);\r\n                    var isDataUrl = sourceMappingURL.substr(0, 5) === 'data:';\r\n                    var defaultSourceRoot = fileName.substring(0, fileName.lastIndexOf('/') + 1);\r\n\r\n                    if (sourceMappingURL[0] !== '/' && !isDataUrl && !(/^https?:\\/\\/|^\\/\\//i).test(sourceMappingURL)) {\r\n                        sourceMappingURL = defaultSourceRoot + sourceMappingURL;\r\n                    }\r\n\r\n                    return this._getSourceMapConsumer(sourceMappingURL, defaultSourceRoot)\r\n                        .then(function(sourceMapConsumer) {\r\n                            return _extractLocationInfoFromSourceMapSource(stackframe, sourceMapConsumer, sourceCache)\r\n                                .then(resolve)['catch'](function() {\r\n                                    resolve(stackframe);\r\n                                });\r\n                        });\r\n                }.bind(this), reject)['catch'](reject);\r\n            }.bind(this));\r\n        };\r\n    };\r\n}));\r\n", "(function(root, factory) {\r\n    'use strict';\r\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\r\n\r\n    /* istanbul ignore next */\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('stacktrace', ['error-stack-parser', 'stack-generator', 'stacktrace-gps'], factory);\r\n    } else if (typeof exports === 'object') {\r\n        module.exports = factory(require('error-stack-parser'), require('stack-generator'), require('stacktrace-gps'));\r\n    } else {\r\n        root.StackTrace = factory(root.ErrorStackParser, root.StackGenerator, root.StackTraceGPS);\r\n    }\r\n}(this, function StackTrace(ErrorStackParser, StackGenerator, StackTraceGPS) {\r\n    var _options = {\r\n        filter: function(stackframe) {\r\n            // Filter out stackframes for this library by default\r\n            return (stackframe.functionName || '').indexOf('StackTrace$$') === -1 &&\r\n                (stackframe.functionName || '').indexOf('ErrorStackParser$$') === -1 &&\r\n                (stackframe.functionName || '').indexOf('StackTraceGPS$$') === -1 &&\r\n                (stackframe.functionName || '').indexOf('StackGenerator$$') === -1;\r\n        },\r\n        sourceCache: {}\r\n    };\r\n\r\n    var _generateError = function StackTrace$$GenerateError() {\r\n        try {\r\n            // Error must be thrown to get stack in IE\r\n            throw new Error();\r\n        } catch (err) {\r\n            return err;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Merge 2 given Objects. If a conflict occurs the second object wins.\r\n     * Does not do deep merges.\r\n     *\r\n     * @param {Object} first base object\r\n     * @param {Object} second overrides\r\n     * @returns {Object} merged first and second\r\n     * @private\r\n     */\r\n    function _merge(first, second) {\r\n        var target = {};\r\n\r\n        [first, second].forEach(function(obj) {\r\n            for (var prop in obj) {\r\n                if (Object.prototype.hasOwnProperty.call(obj, prop)) {\r\n                    target[prop] = obj[prop];\r\n                }\r\n            }\r\n            return target;\r\n        });\r\n\r\n        return target;\r\n    }\r\n\r\n    function _isShapedLikeParsableError(err) {\r\n        return err.stack || err['opera#sourceloc'];\r\n    }\r\n\r\n    function _filtered(stackframes, filter) {\r\n        if (typeof filter === 'function') {\r\n            return stackframes.filter(filter);\r\n        }\r\n        return stackframes;\r\n    }\r\n\r\n    return {\r\n        /**\r\n         * Get a backtrace from invocation point.\r\n         *\r\n         * @param {Object} opts\r\n         * @returns {Array} of StackFrame\r\n         */\r\n        get: function StackTrace$$get(opts) {\r\n            var err = _generateError();\r\n            return _isShapedLikeParsableError(err) ? this.fromError(err, opts) : this.generateArtificially(opts);\r\n        },\r\n\r\n        /**\r\n         * Get a backtrace from invocation point.\r\n         * IMPORTANT: Does not handle source maps or guess function names!\r\n         *\r\n         * @param {Object} opts\r\n         * @returns {Array} of StackFrame\r\n         */\r\n        getSync: function StackTrace$$getSync(opts) {\r\n            opts = _merge(_options, opts);\r\n            var err = _generateError();\r\n            var stack = _isShapedLikeParsableError(err) ? ErrorStackParser.parse(err) : StackGenerator.backtrace(opts);\r\n            return _filtered(stack, opts.filter);\r\n        },\r\n\r\n        /**\r\n         * Given an error object, parse it.\r\n         *\r\n         * @param {Error} error object\r\n         * @param {Object} opts\r\n         * @returns {Promise} for Array[StackFrame}\r\n         */\r\n        fromError: function StackTrace$$fromError(error, opts) {\r\n            opts = _merge(_options, opts);\r\n            var gps = new StackTraceGPS(opts);\r\n            return new Promise(function(resolve) {\r\n                var stackframes = _filtered(ErrorStackParser.parse(error), opts.filter);\r\n                resolve(Promise.all(stackframes.map(function(sf) {\r\n                    return new Promise(function(resolve) {\r\n                        function resolveOriginal() {\r\n                            resolve(sf);\r\n                        }\r\n\r\n                        gps.pinpoint(sf).then(resolve, resolveOriginal)['catch'](resolveOriginal);\r\n                    });\r\n                })));\r\n            }.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Use StackGenerator to generate a backtrace.\r\n         *\r\n         * @param {Object} opts\r\n         * @returns {Promise} of Array[StackFrame]\r\n         */\r\n        generateArtificially: function StackTrace$$generateArtificially(opts) {\r\n            opts = _merge(_options, opts);\r\n            var stackFrames = StackGenerator.backtrace(opts);\r\n            if (typeof opts.filter === 'function') {\r\n                stackFrames = stackFrames.filter(opts.filter);\r\n            }\r\n            return Promise.resolve(stackFrames);\r\n        },\r\n\r\n        /**\r\n         * Given a function, wrap it such that invocations trigger a callback that\r\n         * is called with a stack trace.\r\n         *\r\n         * @param {Function} fn to be instrumented\r\n         * @param {Function} callback function to call with a stack trace on invocation\r\n         * @param {Function} errback optional function to call with error if unable to get stack trace.\r\n         * @param {Object} thisArg optional context object (e.g. window)\r\n         */\r\n        instrument: function StackTrace$$instrument(fn, callback, errback, thisArg) {\r\n            if (typeof fn !== 'function') {\r\n                throw new Error('Cannot instrument non-function object');\r\n            } else if (typeof fn.__stacktraceOriginalFn === 'function') {\r\n                // Already instrumented, return given Function\r\n                return fn;\r\n            }\r\n\r\n            var instrumented = function StackTrace$$instrumented() {\r\n                try {\r\n                    this.get().then(callback, errback)['catch'](errback);\r\n                    return fn.apply(thisArg || this, arguments);\r\n                } catch (e) {\r\n                    if (_isShapedLikeParsableError(e)) {\r\n                        this.fromError(e).then(callback, errback)['catch'](errback);\r\n                    }\r\n                    throw e;\r\n                }\r\n            }.bind(this);\r\n            instrumented.__stacktraceOriginalFn = fn;\r\n\r\n            return instrumented;\r\n        },\r\n\r\n        /**\r\n         * Given a function that has been instrumented,\r\n         * revert the function to it's original (non-instrumented) state.\r\n         *\r\n         * @param {Function} fn to de-instrument\r\n         */\r\n        deinstrument: function StackTrace$$deinstrument(fn) {\r\n            if (typeof fn !== 'function') {\r\n                throw new Error('Cannot de-instrument non-function object');\r\n            } else if (typeof fn.__stacktraceOriginalFn === 'function') {\r\n                return fn.__stacktraceOriginalFn;\r\n            } else {\r\n                // Function not instrumented, return original\r\n                return fn;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Given an error message and Array of StackFrames, serialize and POST to given URL.\r\n         *\r\n         * @param {Array} stackframes\r\n         * @param {String} url\r\n         * @param {String} errorMsg\r\n         * @param {Object} requestOptions\r\n         */\r\n        report: function StackTrace$$report(stackframes, url, errorMsg, requestOptions) {\r\n            return new Promise(function(resolve, reject) {\r\n                var req = new XMLHttpRequest();\r\n                req.onerror = reject;\r\n                req.onreadystatechange = function onreadystatechange() {\r\n                    if (req.readyState === 4) {\r\n                        if (req.status >= 200 && req.status < 400) {\r\n                            resolve(req.responseText);\r\n                        } else {\r\n                            reject(new Error('POST to ' + url + ' failed with status: ' + req.status));\r\n                        }\r\n                    }\r\n                };\r\n                req.open('post', url);\r\n\r\n                // Set request headers\r\n                req.setRequestHeader('Content-Type', 'application/json');\r\n                if (requestOptions && typeof requestOptions.headers === 'object') {\r\n                    var headers = requestOptions.headers;\r\n                    for (var header in headers) {\r\n                        if (Object.prototype.hasOwnProperty.call(headers, header)) {\r\n                            req.setRequestHeader(header, headers[header]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                var reportPayload = {stack: stackframes};\r\n                if (errorMsg !== undefined && errorMsg !== null) {\r\n                    reportPayload.message = errorMsg;\r\n                }\r\n\r\n                req.send(JSON.stringify(reportPayload));\r\n            });\r\n        }\r\n    };\r\n}));\r\n", "import StackTrace from \"stacktrace-js\";\n\n// report error to server\nwindow.addEventListener(\"error\", (e) => {\n    StackTrace\n\t\t.fromError(e.error)\n\t\t.then((stack) => {\n\t\t\tfetch(\"/error\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tmsg: e.error.message,\n\t\t\t\t\tstack: stack.slice(0, 4).map((step) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...step,\n\t\t\t\t\t\t\tfile: step.fileName.replace(location.origin + \"/\", \"\"),\n\t\t\t\t\t\t\tline: step.lineNumber,\n\t\t\t\t\t\t\tcol: step.columnNumber,\n\t\t\t\t\t\t};\n\t\t\t\t\t}),\n\t\t\t\t}),\n\t\t\t});\n\t\t})\n\t\t.catch(() => console.error(\"failed to parse err\"));\n});\n\ninterface User {\n\tid: string,\n\tname: string,\n}\n\ninterface Replit {\n\tgetUser(): Promise<User | null>,\n\tauth(): Promise<User | null>,\n\tgetUserOrAuth(): Promise<User | null>,\n\tgetData<D = any>(key: string, def?: D): Promise<D>,\n\tsetData<D>(key: string, val: D): Promise<D>,\n\tdelData(key: string): Promise<void>,\n\tlistData(): Promise<string[]>,\n\tclearData(): Promise<void>,\n}\n\ndeclare global {\n\tconst replit: Replit;\n}\n\n// replit auth & db integration\nconst replit: Replit = {\n\n\tgetUser(): Promise<User | null> {\n\t\treturn fetch(\"/user\")\n\t\t\t.then((res) => res.json())\n\t\t\t.then((user) => {\n\t\t\t\tif (user) {\n\t\t\t\t\treturn Promise.resolve(user);\n\t\t\t\t} else {\n\t\t\t\t\treturn Promise.resolve(null);\n\t\t\t\t}\n\t\t\t});\n\t},\n\n\tauth(): Promise<User | null> {\n\n\t\treturn new Promise((resolve, reject) => {\n\n\t\t\tconst authComplete = (e) => {\n\t\t\t\tif (e.data !== \"auth_complete\") {\n\t\t\t\t\tresolve(null);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\twindow.removeEventListener(\"message\", authComplete);\n\t\t\t\tauthWindow.close();\n\t\t\t\tthis.getUser().then(resolve);\n\t\t\t};\n\n\t\t\twindow.addEventListener(\"message\", authComplete);\n\n\t\t\tconst w = 320;\n\t\t\tconst h = 480;\n\t\t\tconst left = (screen.width / 2) - (w / 2);\n\t\t\tconst top = (screen.height / 2) - (h / 2);\n\n\t\t\tconst authWindow = window.open(\n\t\t\t\t`https://repl.it/auth_with_repl_site?domain=${location.host}`,\n\t\t\t\t\"_blank\",\n\t\t\t\t`modal=yes, toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width=${w}, height=${h}, top=${top}, left=${left}`\n\t\t\t);\n\n\t\t});\n\n\t},\n\n\tgetUserOrAuth(): Promise<User | null> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.getUser().then((user) => {\n\t\t\t\tif (user) {\n\t\t\t\t\tresolve(user);\n\t\t\t\t} else {\n\t\t\t\t\tthis.auth().then((user) => {\n\t\t\t\t\t\tresolve(user);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t});\n\t},\n\n\tgetData<D = any>(key: string, def?: D): Promise<D> {\n\t\treturn fetch(`/db/${key}`)\n\t\t\t.then((res) => res.json())\n\t\t\t.then((val) => {\n\t\t\t\t// set default value if empty\n\t\t\t\tif (val == null && def !== undefined) {\n\t\t\t\t\treturn this.setData(key, def);\n\t\t\t\t}\n\t\t\t\treturn Promise.resolve(val);\n\t\t\t});\n\t},\n\n\tsetData<D>(key: string, val: D): Promise<D> {\n\t\treturn fetch(`/db/${key}`, {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t\tbody: JSON.stringify(val),\n\t\t}).then(() => Promise.resolve(val));\n\t},\n\n\tdelData(key: string): Promise<void> {\n\t\treturn fetch(`/db/${key}`, {\n\t\t\tmethod: \"DELETE\",\n\t\t}).then(() => {});\n\t},\n\n\tlistData(): Promise<string[]> {\n\t\treturn fetch(`/db`)\n\t\t\t.then((res) => res.json());\n\t},\n\n\tclearData(): Promise<void> {\n\t\treturn fetch(`/db`, {\n\t\t\tmethod: \"DELETE\",\n\t\t}).then((res) => {});\n\t},\n\n};\n\nwindow.replit = replit;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,MAAC,UAAS,MAAM,SAAS;AACrB;AAIA,YAAI,OAAO,WAAW,cAAc,OAAO,KAAK;AAC5C,iBAAO,cAAc,CAAC,GAAG,OAAO;AAAA,QACpC,WAAW,OAAO,YAAY,UAAU;AACpC,iBAAO,UAAU,QAAQ;AAAA,QAC7B,OAAO;AACH,eAAK,aAAa,QAAQ;AAAA,QAC9B;AAAA,MACJ,GAAE,SAAM,WAAW;AACf;AACA,2BAAmB,GAAG;AAClB,iBAAO,CAAC,MAAM,WAAW,CAAC,CAAC,KAAK,SAAS,CAAC;AAAA,QAC9C;AAFS,AAIT,6BAAqB,KAAK;AACtB,iBAAO,IAAI,OAAO,CAAC,EAAE,YAAY,IAAI,IAAI,UAAU,CAAC;AAAA,QACxD;AAFS,AAIT,yBAAiB,GAAG;AAChB,iBAAO,WAAW;AACd,mBAAO,KAAK;AAAA,UAChB;AAAA,QACJ;AAJS,AAMT,YAAI,eAAe,CAAC,iBAAiB,UAAU,YAAY,YAAY;AACvE,YAAI,eAAe,CAAC,gBAAgB,YAAY;AAChD,YAAI,cAAc,CAAC,YAAY,gBAAgB,QAAQ;AACvD,YAAI,aAAa,CAAC,MAAM;AACxB,YAAI,cAAc,CAAC,YAAY;AAE/B,YAAI,QAAQ,aAAa,OAAO,cAAc,aAAa,YAAY,WAAW;AAElF,4BAAoB,KAAK;AACrB,cAAI,CAAC;AAAK;AACV,mBAAS,KAAI,GAAG,KAAI,MAAM,QAAQ,MAAK;AACnC,gBAAI,IAAI,MAAM,SAAQ,QAAW;AAC7B,mBAAK,QAAQ,YAAY,MAAM,GAAE,GAAG,IAAI,MAAM,IAAG;AAAA,YACrD;AAAA,UACJ;AAAA,QACJ;AAPS,AAST,mBAAW,YAAY;AAAA,UACnB,SAAS,WAAW;AAChB,mBAAO,KAAK;AAAA,UAChB;AAAA,UACA,SAAS,SAAS,GAAG;AACjB,gBAAI,OAAO,UAAU,SAAS,KAAK,CAAC,MAAM,kBAAkB;AACxD,oBAAM,IAAI,UAAU,uBAAuB;AAAA,YAC/C;AACA,iBAAK,OAAO;AAAA,UAChB;AAAA,UAEA,eAAe,WAAW;AACtB,mBAAO,KAAK;AAAA,UAChB;AAAA,UACA,eAAe,SAAS,GAAG;AACvB,gBAAI,aAAa,YAAY;AACzB,mBAAK,aAAa;AAAA,YACtB,WAAW,aAAa,QAAQ;AAC5B,mBAAK,aAAa,IAAI,WAAW,CAAC;AAAA,YACtC,OAAO;AACH,oBAAM,IAAI,UAAU,6CAA6C;AAAA,YACrE;AAAA,UACJ;AAAA,UAEA,UAAU,WAAW;AACjB,gBAAI,WAAW,KAAK,YAAY,KAAK;AACrC,gBAAI,aAAa,KAAK,cAAc,KAAK;AACzC,gBAAI,eAAe,KAAK,gBAAgB,KAAK;AAC7C,gBAAI,eAAe,KAAK,gBAAgB,KAAK;AAC7C,gBAAI,KAAK,UAAU,GAAG;AAClB,kBAAI,UAAU;AACV,uBAAO,aAAa,WAAW,MAAM,aAAa,MAAM,eAAe;AAAA,cAC3E;AACA,qBAAO,YAAY,aAAa,MAAM;AAAA,YAC1C;AACA,gBAAI,cAAc;AACd,qBAAO,eAAe,OAAO,WAAW,MAAM,aAAa,MAAM,eAAe;AAAA,YACpF;AACA,mBAAO,WAAW,MAAM,aAAa,MAAM;AAAA,UAC/C;AAAA,QACJ;AAEA,mBAAW,aAAa,gCAAgC,KAAK;AACzD,cAAI,iBAAiB,IAAI,QAAQ,GAAG;AACpC,cAAI,eAAe,IAAI,YAAY,GAAG;AAEtC,cAAI,eAAe,IAAI,UAAU,GAAG,cAAc;AAClD,cAAI,OAAO,IAAI,UAAU,iBAAiB,GAAG,YAAY,EAAE,MAAM,GAAG;AACpE,cAAI,iBAAiB,IAAI,UAAU,eAAe,CAAC;AAEnD,cAAI,eAAe,QAAQ,GAAG,MAAM,GAAG;AACnC,gBAAI,QAAQ,gCAAgC,KAAK,gBAAgB,EAAE;AACnE,gBAAI,WAAW,MAAM;AACrB,gBAAI,aAAa,MAAM;AACvB,gBAAI,eAAe,MAAM;AAAA,UAC7B;AAEA,iBAAO,IAAI,WAAW;AAAA,YAClB;AAAA,YACA,MAAM,QAAQ;AAAA,YACd;AAAA,YACA,YAAY,cAAc;AAAA,YAC1B,cAAc,gBAAgB;AAAA,UAClC,CAAC;AAAA,QACL;AAEA,iBAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC1C,qBAAW,UAAU,QAAQ,YAAY,aAAa,EAAE,KAAK,QAAQ,aAAa,EAAE;AACpF,qBAAW,UAAU,QAAQ,YAAY,aAAa,EAAE,KAAM,SAAS,GAAG;AACtE,mBAAO,SAAS,GAAG;AACf,mBAAK,KAAK,QAAQ,CAAC;AAAA,YACvB;AAAA,UACJ,EAAG,aAAa,EAAE;AAAA,QACtB;AAEA,iBAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC1C,qBAAW,UAAU,QAAQ,YAAY,aAAa,EAAE,KAAK,QAAQ,aAAa,EAAE;AACpF,qBAAW,UAAU,QAAQ,YAAY,aAAa,EAAE,KAAM,SAAS,GAAG;AACtE,mBAAO,SAAS,GAAG;AACf,kBAAI,CAAC,UAAU,CAAC,GAAG;AACf,sBAAM,IAAI,UAAU,IAAI,mBAAmB;AAAA,cAC/C;AACA,mBAAK,KAAK,OAAO,CAAC;AAAA,YACtB;AAAA,UACJ,EAAG,aAAa,EAAE;AAAA,QACtB;AAEA,iBAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AACzC,qBAAW,UAAU,QAAQ,YAAY,YAAY,EAAE,KAAK,QAAQ,YAAY,EAAE;AAClF,qBAAW,UAAU,QAAQ,YAAY,YAAY,EAAE,KAAM,SAAS,GAAG;AACrE,mBAAO,SAAS,GAAG;AACf,mBAAK,KAAK,OAAO,CAAC;AAAA,YACtB;AAAA,UACJ,EAAG,YAAY,EAAE;AAAA,QACrB;AAEA,eAAO;AAAA,MACX,CAAC;AAAA;AAAA;;;AC9ID;AAAA;AAAA,MAAC,UAAS,MAAM,SAAS;AACrB;AAIA,YAAI,OAAO,WAAW,cAAc,OAAO,KAAK;AAC5C,iBAAO,sBAAsB,CAAC,YAAY,GAAG,OAAO;AAAA,QACxD,WAAW,OAAO,YAAY,UAAU;AACpC,iBAAO,UAAU,QAAQ,oBAAqB;AAAA,QAClD,OAAO;AACH,eAAK,mBAAmB,QAAQ,KAAK,UAAU;AAAA,QACnD;AAAA,MACJ,GAAE,SAAM,0BAA0B,YAAY;AAC1C;AAEA,YAAI,8BAA8B;AAClC,YAAI,yBAAyB;AAC7B,YAAI,4BAA4B;AAEhC,eAAO;AAAA,UAOH,OAAO,iCAAiC,OAAO;AAC3C,gBAAI,OAAO,MAAM,eAAe,eAAe,OAAO,MAAM,uBAAuB,aAAa;AAC5F,qBAAO,KAAK,WAAW,KAAK;AAAA,YAChC,WAAW,MAAM,SAAS,MAAM,MAAM,MAAM,sBAAsB,GAAG;AACjE,qBAAO,KAAK,YAAY,KAAK;AAAA,YACjC,WAAW,MAAM,OAAO;AACpB,qBAAO,KAAK,gBAAgB,KAAK;AAAA,YACrC,OAAO;AACH,oBAAM,IAAI,MAAM,iCAAiC;AAAA,YACrD;AAAA,UACJ;AAAA,UAGA,iBAAiB,2CAA2C,SAAS;AAEjE,gBAAI,QAAQ,QAAQ,GAAG,MAAM,IAAI;AAC7B,qBAAO,CAAC,OAAO;AAAA,YACnB;AAEA,gBAAI,SAAS;AACb,gBAAI,QAAQ,OAAO,KAAK,QAAQ,QAAQ,SAAS,EAAE,CAAC;AACpD,mBAAO,CAAC,MAAM,IAAI,MAAM,MAAM,QAAW,MAAM,MAAM,MAAS;AAAA,UAClE;AAAA,UAEA,aAAa,uCAAuC,OAAO;AACvD,gBAAI,WAAW,MAAM,MAAM,MAAM,IAAI,EAAE,OAAO,SAAS,MAAM;AACzD,qBAAO,CAAC,CAAC,KAAK,MAAM,sBAAsB;AAAA,YAC9C,GAAG,IAAI;AAEP,mBAAO,SAAS,IAAI,SAAS,MAAM;AAC/B,kBAAI,KAAK,QAAQ,QAAQ,IAAI,IAAI;AAE7B,uBAAO,KAAK,QAAQ,cAAc,MAAM,EAAE,QAAQ,gCAAgC,EAAE;AAAA,cACxF;AACA,kBAAI,gBAAgB,KAAK,QAAQ,QAAQ,EAAE,EAAE,QAAQ,gBAAgB,GAAG;AAIxE,kBAAI,YAAW,cAAc,MAAM,0BAA0B;AAG7D,8BAAgB,YAAW,cAAc,QAAQ,UAAS,IAAI,EAAE,IAAI;AAEpE,kBAAI,SAAS,cAAc,MAAM,KAAK,EAAE,MAAM,CAAC;AAE/C,kBAAI,gBAAgB,KAAK,gBAAgB,YAAW,UAAS,KAAK,OAAO,IAAI,CAAC;AAC9E,kBAAI,eAAe,OAAO,KAAK,GAAG,KAAK;AACvC,kBAAI,WAAW,CAAC,QAAQ,aAAa,EAAE,QAAQ,cAAc,EAAE,IAAI,KAAK,SAAY,cAAc;AAElG,qBAAO,IAAI,WAAW;AAAA,gBAClB;AAAA,gBACA;AAAA,gBACA,YAAY,cAAc;AAAA,gBAC1B,cAAc,cAAc;AAAA,gBAC5B,QAAQ;AAAA,cACZ,CAAC;AAAA,YACL,GAAG,IAAI;AAAA,UACX;AAAA,UAEA,iBAAiB,2CAA2C,OAAO;AAC/D,gBAAI,WAAW,MAAM,MAAM,MAAM,IAAI,EAAE,OAAO,SAAS,MAAM;AACzD,qBAAO,CAAC,KAAK,MAAM,yBAAyB;AAAA,YAChD,GAAG,IAAI;AAEP,mBAAO,SAAS,IAAI,SAAS,MAAM;AAE/B,kBAAI,KAAK,QAAQ,SAAS,IAAI,IAAI;AAC9B,uBAAO,KAAK,QAAQ,oDAAoD,KAAK;AAAA,cACjF;AAEA,kBAAI,KAAK,QAAQ,GAAG,MAAM,MAAM,KAAK,QAAQ,GAAG,MAAM,IAAI;AAEtD,uBAAO,IAAI,WAAW;AAAA,kBAClB,cAAc;AAAA,gBAClB,CAAC;AAAA,cACL,OAAO;AACH,oBAAI,oBAAoB;AACxB,oBAAI,UAAU,KAAK,MAAM,iBAAiB;AAC1C,oBAAI,eAAe,WAAW,QAAQ,KAAK,QAAQ,KAAK;AACxD,oBAAI,gBAAgB,KAAK,gBAAgB,KAAK,QAAQ,mBAAmB,EAAE,CAAC;AAE5E,uBAAO,IAAI,WAAW;AAAA,kBAClB;AAAA,kBACA,UAAU,cAAc;AAAA,kBACxB,YAAY,cAAc;AAAA,kBAC1B,cAAc,cAAc;AAAA,kBAC5B,QAAQ;AAAA,gBACZ,CAAC;AAAA,cACL;AAAA,YACJ,GAAG,IAAI;AAAA,UACX;AAAA,UAEA,YAAY,sCAAsC,GAAG;AACjD,gBAAI,CAAC,EAAE,cAAe,EAAE,QAAQ,QAAQ,IAAI,IAAI,MAC5C,EAAE,QAAQ,MAAM,IAAI,EAAE,SAAS,EAAE,WAAW,MAAM,IAAI,EAAE,QAAS;AACjE,qBAAO,KAAK,YAAY,CAAC;AAAA,YAC7B,WAAW,CAAC,EAAE,OAAO;AACjB,qBAAO,KAAK,aAAa,CAAC;AAAA,YAC9B,OAAO;AACH,qBAAO,KAAK,aAAa,CAAC;AAAA,YAC9B;AAAA,UACJ;AAAA,UAEA,aAAa,uCAAuC,GAAG;AACnD,gBAAI,SAAS;AACb,gBAAI,QAAQ,EAAE,QAAQ,MAAM,IAAI;AAChC,gBAAI,SAAS,CAAC;AAEd,qBAAS,IAAI,GAAG,MAAM,MAAM,QAAQ,IAAI,KAAK,KAAK,GAAG;AACjD,kBAAI,QAAQ,OAAO,KAAK,MAAM,EAAE;AAChC,kBAAI,OAAO;AACP,uBAAO,KAAK,IAAI,WAAW;AAAA,kBACvB,UAAU,MAAM;AAAA,kBAChB,YAAY,MAAM;AAAA,kBAClB,QAAQ,MAAM;AAAA,gBAClB,CAAC,CAAC;AAAA,cACN;AAAA,YACJ;AAEA,mBAAO;AAAA,UACX;AAAA,UAEA,cAAc,wCAAwC,GAAG;AACrD,gBAAI,SAAS;AACb,gBAAI,QAAQ,EAAE,WAAW,MAAM,IAAI;AACnC,gBAAI,SAAS,CAAC;AAEd,qBAAS,IAAI,GAAG,MAAM,MAAM,QAAQ,IAAI,KAAK,KAAK,GAAG;AACjD,kBAAI,QAAQ,OAAO,KAAK,MAAM,EAAE;AAChC,kBAAI,OAAO;AACP,uBAAO,KACH,IAAI,WAAW;AAAA,kBACX,cAAc,MAAM,MAAM;AAAA,kBAC1B,UAAU,MAAM;AAAA,kBAChB,YAAY,MAAM;AAAA,kBAClB,QAAQ,MAAM;AAAA,gBAClB,CAAC,CACL;AAAA,cACJ;AAAA,YACJ;AAEA,mBAAO;AAAA,UACX;AAAA,UAGA,cAAc,wCAAwC,OAAO;AACzD,gBAAI,WAAW,MAAM,MAAM,MAAM,IAAI,EAAE,OAAO,SAAS,MAAM;AACzD,qBAAO,CAAC,CAAC,KAAK,MAAM,2BAA2B,KAAK,CAAC,KAAK,MAAM,mBAAmB;AAAA,YACvF,GAAG,IAAI;AAEP,mBAAO,SAAS,IAAI,SAAS,MAAM;AAC/B,kBAAI,SAAS,KAAK,MAAM,GAAG;AAC3B,kBAAI,gBAAgB,KAAK,gBAAgB,OAAO,IAAI,CAAC;AACrD,kBAAI,eAAgB,OAAO,MAAM,KAAK;AACtC,kBAAI,eAAe,aACd,QAAQ,kCAAkC,IAAI,EAC9C,QAAQ,cAAc,EAAE,KAAK;AAClC,kBAAI;AACJ,kBAAI,aAAa,MAAM,aAAa,GAAG;AACnC,0BAAU,aAAa,QAAQ,sBAAsB,IAAI;AAAA,cAC7D;AACA,kBAAI,OAAQ,YAAY,UAAa,YAAY,8BAC7C,SAAY,QAAQ,MAAM,GAAG;AAEjC,qBAAO,IAAI,WAAW;AAAA,gBAClB;AAAA,gBACA;AAAA,gBACA,UAAU,cAAc;AAAA,gBACxB,YAAY,cAAc;AAAA,gBAC1B,cAAc,cAAc;AAAA,gBAC5B,QAAQ;AAAA,cACZ,CAAC;AAAA,YACL,GAAG,IAAI;AAAA,UACX;AAAA,QACJ;AAAA,MACJ,CAAC;AAAA;AAAA;;;ACzMD;AAAA;AAAA,MAAC,UAAS,MAAM,SAAS;AACrB;AAIA,YAAI,OAAO,WAAW,cAAc,OAAO,KAAK;AAC5C,iBAAO,mBAAmB,CAAC,YAAY,GAAG,OAAO;AAAA,QACrD,WAAW,OAAO,YAAY,UAAU;AACpC,iBAAO,UAAU,QAAQ,oBAAqB;AAAA,QAClD,OAAO;AACH,eAAK,iBAAiB,QAAQ,KAAK,UAAU;AAAA,QACjD;AAAA,MACJ,GAAE,SAAM,SAAS,YAAY;AACzB,eAAO;AAAA,UACH,WAAW,mCAAmC,MAAM;AAChD,gBAAI,QAAQ,CAAC;AACb,gBAAI,eAAe;AAEnB,gBAAI,OAAO,SAAS,YAAY,OAAO,KAAK,iBAAiB,UAAU;AACnE,6BAAe,KAAK;AAAA,YACxB;AAEA,gBAAI,OAAO,UAAU;AACrB,mBAAO,QAAQ,MAAM,SAAS,gBAAgB,KAAK,cAAc;AAE7D,kBAAI,OAAO,IAAI,MAAM,KAAK,aAAa,MAAM;AAC7C,uBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,EAAE,GAAG;AAClC,qBAAK,KAAK,KAAK,aAAa;AAAA,cAChC;AACA,kBAAI,gCAAgC,KAAK,KAAK,SAAS,CAAC,GAAG;AACvD,sBAAM,KAAK,IAAI,WAAW,EAAC,cAAc,OAAO,MAAM,QAAW,KAAU,CAAC,CAAC;AAAA,cACjF,OAAO;AACH,sBAAM,KAAK,IAAI,WAAW,EAAC,KAAU,CAAC,CAAC;AAAA,cAC3C;AAEA,kBAAI;AACA,uBAAO,KAAK;AAAA,cAChB,SAAS,GAAP;AACE;AAAA,cACJ;AAAA,YACJ;AACA,mBAAO;AAAA,UACX;AAAA,QACJ;AAAA,MACJ,CAAC;AAAA;AAAA;;;AC5CD;AAAA;AAiBA,sBAAgB,OAAO,OAAO,eAAe;AAC3C,YAAI,SAAS,OAAO;AAClB,iBAAO,MAAM;AAAA,QACf,WAAW,UAAU,WAAW,GAAG;AACjC,iBAAO;AAAA,QACT,OAAO;AACL,gBAAM,IAAI,MAAM,MAAM,QAAQ,2BAA2B;AAAA,QAC3D;AAAA,MACF;AARS,AAST,cAAQ,SAAS;AAEjB,UAAI,YAAY;AAChB,UAAI,gBAAgB;AAEpB,wBAAkB,MAAM;AACtB,YAAI,QAAQ,KAAK,MAAM,SAAS;AAChC,YAAI,CAAC,OAAO;AACV,iBAAO;AAAA,QACT;AACA,eAAO;AAAA,UACL,QAAQ,MAAM;AAAA,UACd,MAAM,MAAM;AAAA,UACZ,MAAM,MAAM;AAAA,UACZ,MAAM,MAAM;AAAA,UACZ,MAAM,MAAM;AAAA,QACd;AAAA,MACF;AAZS,AAaT,cAAQ,WAAW;AAEnB,2BAAqB,YAAY;AAC/B,YAAI,MAAM;AACV,YAAI,WAAW,QAAQ;AACrB,iBAAO,WAAW,SAAS;AAAA,QAC7B;AACA,eAAO;AACP,YAAI,WAAW,MAAM;AACnB,iBAAO,WAAW,OAAO;AAAA,QAC3B;AACA,YAAI,WAAW,MAAM;AACnB,iBAAO,WAAW;AAAA,QACpB;AACA,YAAI,WAAW,MAAM;AACnB,iBAAO,MAAM,WAAW;AAAA,QAC1B;AACA,YAAI,WAAW,MAAM;AACnB,iBAAO,WAAW;AAAA,QACpB;AACA,eAAO;AAAA,MACT;AAnBS,AAoBT,cAAQ,cAAc;AAatB,yBAAmB,OAAO;AACxB,YAAI,OAAO;AACX,YAAI,MAAM,SAAS,KAAK;AACxB,YAAI,KAAK;AACP,cAAI,CAAC,IAAI,MAAM;AACb,mBAAO;AAAA,UACT;AACA,iBAAO,IAAI;AAAA,QACb;AACA,YAAI,aAAa,QAAQ,WAAW,IAAI;AAExC,YAAI,QAAQ,KAAK,MAAM,KAAK;AAC5B,iBAAS,MAAM,KAAK,GAAG,IAAI,MAAM,SAAS,GAAG,KAAK,GAAG,KAAK;AACxD,iBAAO,MAAM;AACb,cAAI,SAAS,KAAK;AAChB,kBAAM,OAAO,GAAG,CAAC;AAAA,UACnB,WAAW,SAAS,MAAM;AACxB;AAAA,UACF,WAAW,KAAK,GAAG;AACjB,gBAAI,SAAS,IAAI;AAIf,oBAAM,OAAO,IAAI,GAAG,EAAE;AACtB,mBAAK;AAAA,YACP,OAAO;AACL,oBAAM,OAAO,GAAG,CAAC;AACjB;AAAA,YACF;AAAA,UACF;AAAA,QACF;AACA,eAAO,MAAM,KAAK,GAAG;AAErB,YAAI,SAAS,IAAI;AACf,iBAAO,aAAa,MAAM;AAAA,QAC5B;AAEA,YAAI,KAAK;AACP,cAAI,OAAO;AACX,iBAAO,YAAY,GAAG;AAAA,QACxB;AACA,eAAO;AAAA,MACT;AA1CS,AA2CT,cAAQ,YAAY;AAkBpB,oBAAc,OAAO,OAAO;AAC1B,YAAI,UAAU,IAAI;AAChB,kBAAQ;AAAA,QACV;AACA,YAAI,UAAU,IAAI;AAChB,kBAAQ;AAAA,QACV;AACA,YAAI,WAAW,SAAS,KAAK;AAC7B,YAAI,WAAW,SAAS,KAAK;AAC7B,YAAI,UAAU;AACZ,kBAAQ,SAAS,QAAQ;AAAA,QAC3B;AAGA,YAAI,YAAY,CAAC,SAAS,QAAQ;AAChC,cAAI,UAAU;AACZ,qBAAS,SAAS,SAAS;AAAA,UAC7B;AACA,iBAAO,YAAY,QAAQ;AAAA,QAC7B;AAEA,YAAI,YAAY,MAAM,MAAM,aAAa,GAAG;AAC1C,iBAAO;AAAA,QACT;AAGA,YAAI,YAAY,CAAC,SAAS,QAAQ,CAAC,SAAS,MAAM;AAChD,mBAAS,OAAO;AAChB,iBAAO,YAAY,QAAQ;AAAA,QAC7B;AAEA,YAAI,SAAS,MAAM,OAAO,CAAC,MAAM,MAC7B,QACA,UAAU,MAAM,QAAQ,QAAQ,EAAE,IAAI,MAAM,KAAK;AAErD,YAAI,UAAU;AACZ,mBAAS,OAAO;AAChB,iBAAO,YAAY,QAAQ;AAAA,QAC7B;AACA,eAAO;AAAA,MACT;AAxCS,AAyCT,cAAQ,OAAO;AAEf,cAAQ,aAAa,SAAU,OAAO;AACpC,eAAO,MAAM,OAAO,CAAC,MAAM,OAAO,CAAC,CAAC,MAAM,MAAM,SAAS;AAAA,MAC3D;AAQA,wBAAkB,OAAO,OAAO;AAC9B,YAAI,UAAU,IAAI;AAChB,kBAAQ;AAAA,QACV;AAEA,gBAAQ,MAAM,QAAQ,OAAO,EAAE;AAM/B,YAAI,QAAQ;AACZ,eAAO,MAAM,QAAQ,QAAQ,GAAG,MAAM,GAAG;AACvC,cAAI,QAAQ,MAAM,YAAY,GAAG;AACjC,cAAI,QAAQ,GAAG;AACb,mBAAO;AAAA,UACT;AAKA,kBAAQ,MAAM,MAAM,GAAG,KAAK;AAC5B,cAAI,MAAM,MAAM,mBAAmB,GAAG;AACpC,mBAAO;AAAA,UACT;AAEA,YAAE;AAAA,QACJ;AAGA,eAAO,MAAM,QAAQ,CAAC,EAAE,KAAK,KAAK,IAAI,MAAM,OAAO,MAAM,SAAS,CAAC;AAAA,MACrE;AA/BS,AAgCT,cAAQ,WAAW;AAEnB,UAAI,oBAAqB,WAAY;AACnC,YAAI,MAAM,uBAAO,OAAO,IAAI;AAC5B,eAAO,CAAE,gBAAe;AAAA,MAC1B,EAAE;AAEF,wBAAmB,GAAG;AACpB,eAAO;AAAA,MACT;AAFS,AAaT,2BAAqB,MAAM;AACzB,YAAI,cAAc,IAAI,GAAG;AACvB,iBAAO,MAAM;AAAA,QACf;AAEA,eAAO;AAAA,MACT;AANS,AAOT,cAAQ,cAAc,oBAAoB,WAAW;AAErD,6BAAuB,MAAM;AAC3B,YAAI,cAAc,IAAI,GAAG;AACvB,iBAAO,KAAK,MAAM,CAAC;AAAA,QACrB;AAEA,eAAO;AAAA,MACT;AANS,AAOT,cAAQ,gBAAgB,oBAAoB,WAAW;AAEvD,6BAAuB,GAAG;AACxB,YAAI,CAAC,GAAG;AACN,iBAAO;AAAA,QACT;AAEA,YAAI,SAAS,EAAE;AAEf,YAAI,SAAS,GAA4B;AACvC,iBAAO;AAAA,QACT;AAEA,YAAI,EAAE,WAAW,SAAS,CAAC,MAAM,MAC7B,EAAE,WAAW,SAAS,CAAC,MAAM,MAC7B,EAAE,WAAW,SAAS,CAAC,MAAM,OAC7B,EAAE,WAAW,SAAS,CAAC,MAAM,OAC7B,EAAE,WAAW,SAAS,CAAC,MAAM,OAC7B,EAAE,WAAW,SAAS,CAAC,MAAM,OAC7B,EAAE,WAAW,SAAS,CAAC,MAAM,OAC7B,EAAE,WAAW,SAAS,CAAC,MAAM,MAC7B,EAAE,WAAW,SAAS,CAAC,MAAM,IAAe;AAC9C,iBAAO;AAAA,QACT;AAEA,iBAAS,IAAI,SAAS,IAAI,KAAK,GAAG,KAAK;AACrC,cAAI,EAAE,WAAW,CAAC,MAAM,IAAc;AACpC,mBAAO;AAAA,UACT;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AA9BS,AAwCT,0CAAoC,UAAU,UAAU,qBAAqB;AAC3E,YAAI,MAAM,SAAS,SAAS,SAAS;AACrC,YAAI,QAAQ,GAAG;AACb,iBAAO;AAAA,QACT;AAEA,cAAM,SAAS,eAAe,SAAS;AACvC,YAAI,QAAQ,GAAG;AACb,iBAAO;AAAA,QACT;AAEA,cAAM,SAAS,iBAAiB,SAAS;AACzC,YAAI,QAAQ,KAAK,qBAAqB;AACpC,iBAAO;AAAA,QACT;AAEA,cAAM,SAAS,kBAAkB,SAAS;AAC1C,YAAI,QAAQ,GAAG;AACb,iBAAO;AAAA,QACT;AAEA,cAAM,SAAS,gBAAgB,SAAS;AACxC,YAAI,QAAQ,GAAG;AACb,iBAAO;AAAA,QACT;AAEA,eAAO,SAAS,OAAO,SAAS;AAAA,MAClC;AA3BS,AA4BT,cAAQ,6BAA6B;AAWrC,mDAA6C,UAAU,UAAU,sBAAsB;AACrF,YAAI,MAAM,SAAS,gBAAgB,SAAS;AAC5C,YAAI,QAAQ,GAAG;AACb,iBAAO;AAAA,QACT;AAEA,cAAM,SAAS,kBAAkB,SAAS;AAC1C,YAAI,QAAQ,KAAK,sBAAsB;AACrC,iBAAO;AAAA,QACT;AAEA,cAAM,SAAS,SAAS,SAAS;AACjC,YAAI,QAAQ,GAAG;AACb,iBAAO;AAAA,QACT;AAEA,cAAM,SAAS,eAAe,SAAS;AACvC,YAAI,QAAQ,GAAG;AACb,iBAAO;AAAA,QACT;AAEA,cAAM,SAAS,iBAAiB,SAAS;AACzC,YAAI,QAAQ,GAAG;AACb,iBAAO;AAAA,QACT;AAEA,eAAO,SAAS,OAAO,SAAS;AAAA,MAClC;AA3BS,AA4BT,cAAQ,sCAAsC;AAE9C,sBAAgB,OAAO,OAAO;AAC5B,YAAI,UAAU,OAAO;AACnB,iBAAO;AAAA,QACT;AAEA,YAAI,QAAQ,OAAO;AACjB,iBAAO;AAAA,QACT;AAEA,eAAO;AAAA,MACT;AAVS,AAgBT,mDAA6C,UAAU,UAAU;AAC/D,YAAI,MAAM,SAAS,gBAAgB,SAAS;AAC5C,YAAI,QAAQ,GAAG;AACb,iBAAO;AAAA,QACT;AAEA,cAAM,SAAS,kBAAkB,SAAS;AAC1C,YAAI,QAAQ,GAAG;AACb,iBAAO;AAAA,QACT;AAEA,cAAM,OAAO,SAAS,QAAQ,SAAS,MAAM;AAC7C,YAAI,QAAQ,GAAG;AACb,iBAAO;AAAA,QACT;AAEA,cAAM,SAAS,eAAe,SAAS;AACvC,YAAI,QAAQ,GAAG;AACb,iBAAO;AAAA,QACT;AAEA,cAAM,SAAS,iBAAiB,SAAS;AACzC,YAAI,QAAQ,GAAG;AACb,iBAAO;AAAA,QACT;AAEA,eAAO,OAAO,SAAS,MAAM,SAAS,IAAI;AAAA,MAC5C;AA3BS,AA4BT,cAAQ,sCAAsC;AAAA;AAAA;;;ACha9C;AAAA;AAOA,cAAQ,uBAAuB;AAC/B,cAAQ,oBAAoB;AAe5B,+BAAyB,MAAM,OAAO,SAAS,WAAW,UAAU,OAAO;AAUzE,YAAI,MAAM,KAAK,MAAO,SAAQ,QAAQ,CAAC,IAAI;AAC3C,YAAI,MAAM,SAAS,SAAS,UAAU,MAAM,IAAI;AAChD,YAAI,QAAQ,GAAG;AAEb,iBAAO;AAAA,QACT,WACS,MAAM,GAAG;AAEhB,cAAI,QAAQ,MAAM,GAAG;AAEnB,mBAAO,gBAAgB,KAAK,OAAO,SAAS,WAAW,UAAU,KAAK;AAAA,UACxE;AAIA,cAAI,SAAS,QAAQ,mBAAmB;AACtC,mBAAO,QAAQ,UAAU,SAAS,QAAQ;AAAA,UAC5C,OAAO;AACL,mBAAO;AAAA,UACT;AAAA,QACF,OACK;AAEH,cAAI,MAAM,OAAO,GAAG;AAElB,mBAAO,gBAAgB,MAAM,KAAK,SAAS,WAAW,UAAU,KAAK;AAAA,UACvE;AAGA,cAAI,SAAS,QAAQ,mBAAmB;AACtC,mBAAO;AAAA,UACT,OAAO;AACL,mBAAO,OAAO,IAAI,KAAK;AAAA,UACzB;AAAA,QACF;AAAA,MACF;AA7CS,AAiET,cAAQ,SAAS,gBAAgB,SAAS,WAAW,UAAU,OAAO;AACpE,YAAI,UAAU,WAAW,GAAG;AAC1B,iBAAO;AAAA,QACT;AAEA,YAAI,QAAQ,gBAAgB,IAAI,UAAU,QAAQ,SAAS,WAC/B,UAAU,SAAS,QAAQ,oBAAoB;AAC3E,YAAI,QAAQ,GAAG;AACb,iBAAO;AAAA,QACT;AAKA,eAAO,QAAQ,KAAK,GAAG;AACrB,cAAI,SAAS,UAAU,QAAQ,UAAU,QAAQ,IAAI,IAAI,MAAM,GAAG;AAChE;AAAA,UACF;AACA,YAAE;AAAA,QACJ;AAEA,eAAO;AAAA,MACT;AAAA;AAAA;;;AC9GA;AAAA;AAOA,UAAI,OAAO;AACX,UAAI,MAAM,OAAO,UAAU;AAQ3B,0BAAoB;AAClB,aAAK,SAAS,CAAC;AACf,aAAK,OAAO,uBAAO,OAAO,IAAI;AAAA,MAChC;AAHS,AAQT,eAAS,YAAY,4BAA4B,QAAQ,kBAAkB;AACzE,YAAI,MAAM,IAAI,SAAS;AACvB,iBAAS,IAAI,GAAG,MAAM,OAAO,QAAQ,IAAI,KAAK,KAAK;AACjD,cAAI,IAAI,OAAO,IAAI,gBAAgB;AAAA,QACrC;AACA,eAAO;AAAA,MACT;AAQA,eAAS,UAAU,OAAO,yBAAyB;AACjD,eAAO,OAAO,oBAAoB,KAAK,IAAI,EAAE;AAAA,MAC/C;AAOA,eAAS,UAAU,MAAM,sBAAsB,MAAM,kBAAkB;AACrE,YAAI,OAAO,KAAK,YAAY,IAAI;AAChC,YAAI,cAAc,IAAI,KAAK,KAAK,MAAM,IAAI;AAC1C,YAAI,MAAM,KAAK,OAAO;AACtB,YAAI,CAAC,eAAe,kBAAkB;AACpC,eAAK,OAAO,KAAK,IAAI;AAAA,QACvB;AACA,YAAI,CAAC,aAAa;AAChB,eAAK,KAAK,QAAQ;AAAA,QACpB;AAAA,MACF;AAOA,eAAS,UAAU,MAAM,sBAAsB,MAAM;AACnD,YAAI,OAAO,KAAK,YAAY,IAAI;AAChC,eAAO,IAAI,KAAK,KAAK,MAAM,IAAI;AAAA,MACjC;AAOA,eAAS,UAAU,UAAU,0BAA0B,MAAM;AAC3D,YAAI,OAAO,KAAK,YAAY,IAAI;AAChC,YAAI,IAAI,KAAK,KAAK,MAAM,IAAI,GAAG;AAC7B,iBAAO,KAAK,KAAK;AAAA,QACnB;AACA,cAAM,IAAI,MAAM,MAAM,OAAO,sBAAsB;AAAA,MACrD;AAOA,eAAS,UAAU,KAAK,qBAAqB,MAAM;AACjD,YAAI,QAAQ,KAAK,OAAO,KAAK,OAAO,QAAQ;AAC1C,iBAAO,KAAK,OAAO;AAAA,QACrB;AACA,cAAM,IAAI,MAAM,2BAA2B,IAAI;AAAA,MACjD;AAOA,eAAS,UAAU,UAAU,4BAA4B;AACvD,eAAO,KAAK,OAAO,MAAM;AAAA,MAC3B;AAEA,cAAQ,WAAW;AAAA;AAAA;;;ACvGnB;AAAA;AAOA,UAAI,eAAe,mEAAmE,MAAM,EAAE;AAK9F,cAAQ,SAAS,SAAU,QAAQ;AACjC,YAAI,KAAK,UAAU,SAAS,aAAa,QAAQ;AAC/C,iBAAO,aAAa;AAAA,QACtB;AACA,cAAM,IAAI,UAAU,+BAA+B,MAAM;AAAA,MAC3D;AAMA,cAAQ,SAAS,SAAU,UAAU;AACnC,YAAI,OAAO;AACX,YAAI,OAAO;AAEX,YAAI,UAAU;AACd,YAAI,UAAU;AAEd,YAAI,OAAO;AACX,YAAI,OAAO;AAEX,YAAI,OAAO;AACX,YAAI,QAAQ;AAEZ,YAAI,eAAe;AACnB,YAAI,eAAe;AAGnB,YAAI,QAAQ,YAAY,YAAY,MAAM;AACxC,iBAAQ,WAAW;AAAA,QACrB;AAGA,YAAI,WAAW,YAAY,YAAY,SAAS;AAC9C,iBAAQ,WAAW,UAAU;AAAA,QAC/B;AAGA,YAAI,QAAQ,YAAY,YAAY,MAAM;AACxC,iBAAQ,WAAW,OAAO;AAAA,QAC5B;AAGA,YAAI,YAAY,MAAM;AACpB,iBAAO;AAAA,QACT;AAGA,YAAI,YAAY,OAAO;AACrB,iBAAO;AAAA,QACT;AAGA,eAAO;AAAA,MACT;AAAA;AAAA;;;AClEA;AAAA;AAqCA,UAAI,SAAS;AAcb,UAAI,iBAAiB;AAGrB,UAAI,WAAW,KAAK;AAGpB,UAAI,gBAAgB,WAAW;AAG/B,UAAI,uBAAuB;AAQ3B,2BAAqB,QAAQ;AAC3B,eAAO,SAAS,IACV,EAAC,UAAW,KAAK,IAClB,WAAU,KAAK;AAAA,MACtB;AAJS,AAYT,6BAAuB,QAAQ;AAC7B,YAAI,aAAc,UAAS,OAAO;AAClC,YAAI,UAAU,UAAU;AACxB,eAAO,aACH,CAAC,UACD;AAAA,MACN;AANS,AAWT,cAAQ,SAAS,0BAA0B,QAAQ;AACjD,YAAI,UAAU;AACd,YAAI;AAEJ,YAAI,MAAM,YAAY,MAAM;AAE5B,WAAG;AACD,kBAAQ,MAAM;AACd,mBAAS;AACT,cAAI,MAAM,GAAG;AAGX,qBAAS;AAAA,UACX;AACA,qBAAW,OAAO,OAAO,KAAK;AAAA,QAChC,SAAS,MAAM;AAEf,eAAO;AAAA,MACT;AAMA,cAAQ,SAAS,0BAA0B,MAAM,QAAQ,WAAW;AAClE,YAAI,SAAS,KAAK;AAClB,YAAI,SAAS;AACb,YAAI,QAAQ;AACZ,YAAI,cAAc;AAElB,WAAG;AACD,cAAI,UAAU,QAAQ;AACpB,kBAAM,IAAI,MAAM,4CAA4C;AAAA,UAC9D;AAEA,kBAAQ,OAAO,OAAO,KAAK,WAAW,QAAQ,CAAC;AAC/C,cAAI,UAAU,IAAI;AAChB,kBAAM,IAAI,MAAM,2BAA2B,KAAK,OAAO,SAAS,CAAC,CAAC;AAAA,UACpE;AAEA,yBAAe,CAAC,CAAE,SAAQ;AAC1B,mBAAS;AACT,mBAAS,SAAU,UAAS;AAC5B,mBAAS;AAAA,QACX,SAAS;AAET,kBAAU,QAAQ,cAAc,MAAM;AACtC,kBAAU,OAAO;AAAA,MACnB;AAAA;AAAA;;;AC3IA;AAAA;AA2BA,oBAAc,KAAK,GAAG,GAAG;AACvB,YAAI,OAAO,IAAI;AACf,YAAI,KAAK,IAAI;AACb,YAAI,KAAK;AAAA,MACX;AAJS,AAcT,gCAA0B,KAAK,MAAM;AACnC,eAAO,KAAK,MAAM,MAAO,KAAK,OAAO,IAAK,QAAO,IAAK;AAAA,MACxD;AAFS,AAgBT,2BAAqB,KAAK,YAAY,GAAG,GAAG;AAK1C,YAAI,IAAI,GAAG;AAYT,cAAI,aAAa,iBAAiB,GAAG,CAAC;AACtC,cAAI,IAAI,IAAI;AAEZ,eAAK,KAAK,YAAY,CAAC;AACvB,cAAI,QAAQ,IAAI;AAQhB,mBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,gBAAI,WAAW,IAAI,IAAI,KAAK,KAAK,GAAG;AAClC,mBAAK;AACL,mBAAK,KAAK,GAAG,CAAC;AAAA,YAChB;AAAA,UACF;AAEA,eAAK,KAAK,IAAI,GAAG,CAAC;AAClB,cAAI,IAAI,IAAI;AAIZ,sBAAY,KAAK,YAAY,GAAG,IAAI,CAAC;AACrC,sBAAY,KAAK,YAAY,IAAI,GAAG,CAAC;AAAA,QACvC;AAAA,MACF;AA5CS,AAsDT,cAAQ,YAAY,SAAU,KAAK,YAAY;AAC7C,oBAAY,KAAK,YAAY,GAAG,IAAI,SAAS,CAAC;AAAA,MAChD;AAAA;AAAA;;;ACjHA;AAAA;AAOA,UAAI,OAAO;AACX,UAAI,eAAe;AACnB,UAAI,WAAW,oBAAuB;AACtC,UAAI,YAAY;AAChB,UAAI,YAAY,qBAAwB;AAExC,iCAA2B,YAAY;AACrC,YAAI,YAAY;AAChB,YAAI,OAAO,eAAe,UAAU;AAClC,sBAAY,KAAK,MAAM,WAAW,QAAQ,YAAY,EAAE,CAAC;AAAA,QAC3D;AAEA,eAAO,UAAU,YAAY,OACzB,IAAI,yBAAyB,SAAS,IACtC,IAAI,uBAAuB,SAAS;AAAA,MAC1C;AATS,AAWT,wBAAkB,gBAAgB,SAAS,YAAY;AACrD,eAAO,uBAAuB,cAAc,UAAU;AAAA,MACxD;AAKA,wBAAkB,UAAU,WAAW;AAgCvC,wBAAkB,UAAU,sBAAsB;AAClD,aAAO,eAAe,kBAAkB,WAAW,sBAAsB;AAAA,QACvE,KAAK,WAAY;AACf,cAAI,CAAC,KAAK,qBAAqB;AAC7B,iBAAK,eAAe,KAAK,WAAW,KAAK,UAAU;AAAA,UACrD;AAEA,iBAAO,KAAK;AAAA,QACd;AAAA,MACF,CAAC;AAED,wBAAkB,UAAU,qBAAqB;AACjD,aAAO,eAAe,kBAAkB,WAAW,qBAAqB;AAAA,QACtE,KAAK,WAAY;AACf,cAAI,CAAC,KAAK,oBAAoB;AAC5B,iBAAK,eAAe,KAAK,WAAW,KAAK,UAAU;AAAA,UACrD;AAEA,iBAAO,KAAK;AAAA,QACd;AAAA,MACF,CAAC;AAED,wBAAkB,UAAU,0BAC1B,kDAAkD,MAAM,OAAO;AAC7D,YAAI,IAAI,KAAK,OAAO,KAAK;AACzB,eAAO,MAAM,OAAO,MAAM;AAAA,MAC5B;AAOF,wBAAkB,UAAU,iBAC1B,yCAAyC,MAAM,aAAa;AAC1D,cAAM,IAAI,MAAM,0CAA0C;AAAA,MAC5D;AAEF,wBAAkB,kBAAkB;AACpC,wBAAkB,iBAAiB;AAEnC,wBAAkB,uBAAuB;AACzC,wBAAkB,oBAAoB;AAkBtC,wBAAkB,UAAU,cAC1B,uCAAuC,WAAW,UAAU,QAAQ;AAClE,YAAI,UAAU,YAAY;AAC1B,YAAI,QAAQ,UAAU,kBAAkB;AAExC,YAAI;AACJ,gBAAQ;AAAA,eACH,kBAAkB;AACrB,uBAAW,KAAK;AAChB;AAAA,eACG,kBAAkB;AACrB,uBAAW,KAAK;AAChB;AAAA;AAEA,kBAAM,IAAI,MAAM,6BAA6B;AAAA;AAG/C,YAAI,aAAa,KAAK;AACtB,iBAAS,IAAI,SAAU,SAAS;AAC9B,cAAI,SAAS,QAAQ,WAAW,OAAO,OAAO,KAAK,SAAS,GAAG,QAAQ,MAAM;AAC7E,cAAI,UAAU,QAAQ,cAAc,MAAM;AACxC,qBAAS,KAAK,KAAK,YAAY,MAAM;AAAA,UACvC;AACA,iBAAO;AAAA,YACL;AAAA,YACA,eAAe,QAAQ;AAAA,YACvB,iBAAiB,QAAQ;AAAA,YACzB,cAAc,QAAQ;AAAA,YACtB,gBAAgB,QAAQ;AAAA,YACxB,MAAM,QAAQ,SAAS,OAAO,OAAO,KAAK,OAAO,GAAG,QAAQ,IAAI;AAAA,UAClE;AAAA,QACF,GAAG,IAAI,EAAE,QAAQ,WAAW,OAAO;AAAA,MACrC;AAqBF,wBAAkB,UAAU,2BAC1B,oDAAoD,OAAO;AACzD,YAAI,OAAO,KAAK,OAAO,OAAO,MAAM;AAMpC,YAAI,SAAS;AAAA,UACX,QAAQ,KAAK,OAAO,OAAO,QAAQ;AAAA,UACnC,cAAc;AAAA,UACd,gBAAgB,KAAK,OAAO,OAAO,UAAU,CAAC;AAAA,QAChD;AAEA,YAAI,KAAK,cAAc,MAAM;AAC3B,iBAAO,SAAS,KAAK,SAAS,KAAK,YAAY,OAAO,MAAM;AAAA,QAC9D;AACA,YAAI,CAAC,KAAK,SAAS,IAAI,OAAO,MAAM,GAAG;AACrC,iBAAO,CAAC;AAAA,QACV;AACA,eAAO,SAAS,KAAK,SAAS,QAAQ,OAAO,MAAM;AAEnD,YAAI,WAAW,CAAC;AAEhB,YAAI,QAAQ,KAAK,aAAa,QACA,KAAK,mBACL,gBACA,kBACA,KAAK,4BACL,aAAa,iBAAiB;AAC5D,YAAI,SAAS,GAAG;AACd,cAAI,UAAU,KAAK,kBAAkB;AAErC,cAAI,MAAM,WAAW,QAAW;AAC9B,gBAAI,eAAe,QAAQ;AAM3B,mBAAO,WAAW,QAAQ,iBAAiB,cAAc;AACvD,uBAAS,KAAK;AAAA,gBACZ,MAAM,KAAK,OAAO,SAAS,iBAAiB,IAAI;AAAA,gBAChD,QAAQ,KAAK,OAAO,SAAS,mBAAmB,IAAI;AAAA,gBACpD,YAAY,KAAK,OAAO,SAAS,uBAAuB,IAAI;AAAA,cAC9D,CAAC;AAED,wBAAU,KAAK,kBAAkB,EAAE;AAAA,YACrC;AAAA,UACF,OAAO;AACL,gBAAI,iBAAiB,QAAQ;AAM7B,mBAAO,WACA,QAAQ,iBAAiB,QACzB,QAAQ,kBAAkB,gBAAgB;AAC/C,uBAAS,KAAK;AAAA,gBACZ,MAAM,KAAK,OAAO,SAAS,iBAAiB,IAAI;AAAA,gBAChD,QAAQ,KAAK,OAAO,SAAS,mBAAmB,IAAI;AAAA,gBACpD,YAAY,KAAK,OAAO,SAAS,uBAAuB,IAAI;AAAA,cAC9D,CAAC;AAED,wBAAU,KAAK,kBAAkB,EAAE;AAAA,YACrC;AAAA,UACF;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAEF,cAAQ,oBAAoB;AAgC5B,sCAAgC,YAAY;AAC1C,YAAI,YAAY;AAChB,YAAI,OAAO,eAAe,UAAU;AAClC,sBAAY,KAAK,MAAM,WAAW,QAAQ,YAAY,EAAE,CAAC;AAAA,QAC3D;AAEA,YAAI,UAAU,KAAK,OAAO,WAAW,SAAS;AAC9C,YAAI,UAAU,KAAK,OAAO,WAAW,SAAS;AAG9C,YAAI,QAAQ,KAAK,OAAO,WAAW,SAAS,CAAC,CAAC;AAC9C,YAAI,aAAa,KAAK,OAAO,WAAW,cAAc,IAAI;AAC1D,YAAI,iBAAiB,KAAK,OAAO,WAAW,kBAAkB,IAAI;AAClE,YAAI,WAAW,KAAK,OAAO,WAAW,UAAU;AAChD,YAAI,OAAO,KAAK,OAAO,WAAW,QAAQ,IAAI;AAI9C,YAAI,WAAW,KAAK,UAAU;AAC5B,gBAAM,IAAI,MAAM,0BAA0B,OAAO;AAAA,QACnD;AAEA,kBAAU,QACP,IAAI,MAAM,EAIV,IAAI,KAAK,SAAS,EAKlB,IAAI,SAAU,QAAQ;AACrB,iBAAO,cAAc,KAAK,WAAW,UAAU,KAAK,KAAK,WAAW,MAAM,IACtE,KAAK,SAAS,YAAY,MAAM,IAChC;AAAA,QACN,CAAC;AAMH,aAAK,SAAS,SAAS,UAAU,MAAM,IAAI,MAAM,GAAG,IAAI;AACxD,aAAK,WAAW,SAAS,UAAU,SAAS,IAAI;AAEhD,aAAK,aAAa;AAClB,aAAK,iBAAiB;AACtB,aAAK,YAAY;AACjB,aAAK,OAAO;AAAA,MACd;AAjDS,AAmDT,6BAAuB,YAAY,OAAO,OAAO,kBAAkB,SAAS;AAC5E,6BAAuB,UAAU,WAAW;AAS5C,6BAAuB,gBACrB,yCAAyC,YAAY;AACnD,YAAI,MAAM,OAAO,OAAO,uBAAuB,SAAS;AAExD,YAAI,QAAQ,IAAI,SAAS,SAAS,UAAU,WAAW,OAAO,QAAQ,GAAG,IAAI;AAC7E,YAAI,UAAU,IAAI,WAAW,SAAS,UAAU,WAAW,SAAS,QAAQ,GAAG,IAAI;AACnF,YAAI,aAAa,WAAW;AAC5B,YAAI,iBAAiB,WAAW,wBAAwB,IAAI,SAAS,QAAQ,GACrB,IAAI,UAAU;AACtE,YAAI,OAAO,WAAW;AAOtB,YAAI,oBAAoB,WAAW,UAAU,QAAQ,EAAE,MAAM;AAC7D,YAAI,wBAAwB,IAAI,sBAAsB,CAAC;AACvD,YAAI,uBAAuB,IAAI,qBAAqB,CAAC;AAErD,iBAAS,IAAI,GAAG,SAAS,kBAAkB,QAAQ,IAAI,QAAQ,KAAK;AAClE,cAAI,aAAa,kBAAkB;AACnC,cAAI,cAAc,IAAI;AACtB,sBAAY,gBAAgB,WAAW;AACvC,sBAAY,kBAAkB,WAAW;AAEzC,cAAI,WAAW,QAAQ;AACrB,wBAAY,SAAS,QAAQ,QAAQ,WAAW,MAAM;AACtD,wBAAY,eAAe,WAAW;AACtC,wBAAY,iBAAiB,WAAW;AAExC,gBAAI,WAAW,MAAM;AACnB,0BAAY,OAAO,MAAM,QAAQ,WAAW,IAAI;AAAA,YAClD;AAEA,iCAAqB,KAAK,WAAW;AAAA,UACvC;AAEA,gCAAsB,KAAK,WAAW;AAAA,QACxC;AAEA,kBAAU,IAAI,oBAAoB,KAAK,0BAA0B;AAEjE,eAAO;AAAA,MACT;AAKF,6BAAuB,UAAU,WAAW;AAK5C,aAAO,eAAe,uBAAuB,WAAW,WAAW;AAAA,QACjE,KAAK,WAAY;AACf,iBAAO,KAAK,SAAS,QAAQ,EAAE,IAAI,SAAU,GAAG;AAC9C,mBAAO,KAAK,cAAc,OAAO,KAAK,KAAK,KAAK,YAAY,CAAC,IAAI;AAAA,UACnE,GAAG,IAAI;AAAA,QACT;AAAA,MACF,CAAC;AAKD,yBAAmB;AACjB,aAAK,gBAAgB;AACrB,aAAK,kBAAkB;AACvB,aAAK,SAAS;AACd,aAAK,eAAe;AACpB,aAAK,iBAAiB;AACtB,aAAK,OAAO;AAAA,MACd;AAPS,AAcT,6BAAuB,UAAU,iBAC/B,yCAAyC,MAAM,aAAa;AAC1D,YAAI,gBAAgB;AACpB,YAAI,0BAA0B;AAC9B,YAAI,uBAAuB;AAC3B,YAAI,yBAAyB;AAC7B,YAAI,iBAAiB;AACrB,YAAI,eAAe;AACnB,YAAI,SAAS,KAAK;AAClB,YAAI,QAAQ;AACZ,YAAI,iBAAiB,CAAC;AACtB,YAAI,OAAO,CAAC;AACZ,YAAI,mBAAmB,CAAC;AACxB,YAAI,oBAAoB,CAAC;AACzB,YAAI,SAAS,KAAK,SAAS,KAAK;AAEhC,eAAO,QAAQ,QAAQ;AACrB,cAAI,KAAK,OAAO,KAAK,MAAM,KAAK;AAC9B;AACA;AACA,sCAA0B;AAAA,UAC5B,WACS,KAAK,OAAO,KAAK,MAAM,KAAK;AACnC;AAAA,UACF,OACK;AACH,sBAAU,IAAI,QAAQ;AACtB,oBAAQ,gBAAgB;AAOxB,iBAAK,MAAM,OAAO,MAAM,QAAQ,OAAO;AACrC,kBAAI,KAAK,wBAAwB,MAAM,GAAG,GAAG;AAC3C;AAAA,cACF;AAAA,YACF;AACA,kBAAM,KAAK,MAAM,OAAO,GAAG;AAE3B,sBAAU,eAAe;AACzB,gBAAI,SAAS;AACX,uBAAS,IAAI;AAAA,YACf,OAAO;AACL,wBAAU,CAAC;AACX,qBAAO,QAAQ,KAAK;AAClB,0BAAU,OAAO,MAAM,OAAO,IAAI;AAClC,wBAAQ,KAAK;AACb,wBAAQ,KAAK;AACb,wBAAQ,KAAK,KAAK;AAAA,cACpB;AAEA,kBAAI,QAAQ,WAAW,GAAG;AACxB,sBAAM,IAAI,MAAM,wCAAwC;AAAA,cAC1D;AAEA,kBAAI,QAAQ,WAAW,GAAG;AACxB,sBAAM,IAAI,MAAM,wCAAwC;AAAA,cAC1D;AAEA,6BAAe,OAAO;AAAA,YACxB;AAGA,oBAAQ,kBAAkB,0BAA0B,QAAQ;AAC5D,sCAA0B,QAAQ;AAElC,gBAAI,QAAQ,SAAS,GAAG;AAEtB,sBAAQ,SAAS,iBAAiB,QAAQ;AAC1C,gCAAkB,QAAQ;AAG1B,sBAAQ,eAAe,uBAAuB,QAAQ;AACtD,qCAAuB,QAAQ;AAE/B,sBAAQ,gBAAgB;AAGxB,sBAAQ,iBAAiB,yBAAyB,QAAQ;AAC1D,uCAAyB,QAAQ;AAEjC,kBAAI,QAAQ,SAAS,GAAG;AAEtB,wBAAQ,OAAO,eAAe,QAAQ;AACtC,gCAAgB,QAAQ;AAAA,cAC1B;AAAA,YACF;AAEA,8BAAkB,KAAK,OAAO;AAC9B,gBAAI,OAAO,QAAQ,iBAAiB,UAAU;AAC5C,+BAAiB,KAAK,OAAO;AAAA,YAC/B;AAAA,UACF;AAAA,QACF;AAEA,kBAAU,mBAAmB,KAAK,mCAAmC;AACrE,aAAK,sBAAsB;AAE3B,kBAAU,kBAAkB,KAAK,0BAA0B;AAC3D,aAAK,qBAAqB;AAAA,MAC5B;AAMF,6BAAuB,UAAU,eAC/B,uCAAuC,SAAS,WAAW,WACpB,aAAa,aAAa,OAAO;AAMtE,YAAI,QAAQ,cAAc,GAAG;AAC3B,gBAAM,IAAI,UAAU,kDACE,QAAQ,UAAU;AAAA,QAC1C;AACA,YAAI,QAAQ,eAAe,GAAG;AAC5B,gBAAM,IAAI,UAAU,oDACE,QAAQ,YAAY;AAAA,QAC5C;AAEA,eAAO,aAAa,OAAO,SAAS,WAAW,aAAa,KAAK;AAAA,MACnE;AAMF,6BAAuB,UAAU,qBAC/B,gDAAgD;AAC9C,iBAAS,QAAQ,GAAG,QAAQ,KAAK,mBAAmB,QAAQ,EAAE,OAAO;AACnE,cAAI,UAAU,KAAK,mBAAmB;AAMtC,cAAI,QAAQ,IAAI,KAAK,mBAAmB,QAAQ;AAC9C,gBAAI,cAAc,KAAK,mBAAmB,QAAQ;AAElD,gBAAI,QAAQ,kBAAkB,YAAY,eAAe;AACvD,sBAAQ,sBAAsB,YAAY,kBAAkB;AAC5D;AAAA,YACF;AAAA,UACF;AAGA,kBAAQ,sBAAsB;AAAA,QAChC;AAAA,MACF;AAsBF,6BAAuB,UAAU,sBAC/B,+CAA+C,OAAO;AACpD,YAAI,SAAS;AAAA,UACX,eAAe,KAAK,OAAO,OAAO,MAAM;AAAA,UACxC,iBAAiB,KAAK,OAAO,OAAO,QAAQ;AAAA,QAC9C;AAEA,YAAI,QAAQ,KAAK,aACf,QACA,KAAK,oBACL,iBACA,mBACA,KAAK,qCACL,KAAK,OAAO,OAAO,QAAQ,kBAAkB,oBAAoB,CACnE;AAEA,YAAI,SAAS,GAAG;AACd,cAAI,UAAU,KAAK,mBAAmB;AAEtC,cAAI,QAAQ,kBAAkB,OAAO,eAAe;AAClD,gBAAI,SAAS,KAAK,OAAO,SAAS,UAAU,IAAI;AAChD,gBAAI,WAAW,MAAM;AACnB,uBAAS,KAAK,SAAS,GAAG,MAAM;AAChC,kBAAI,KAAK,cAAc,MAAM;AAC3B,yBAAS,KAAK,KAAK,KAAK,YAAY,MAAM;AAAA,cAC5C;AAAA,YACF;AACA,gBAAI,OAAO,KAAK,OAAO,SAAS,QAAQ,IAAI;AAC5C,gBAAI,SAAS,MAAM;AACjB,qBAAO,KAAK,OAAO,GAAG,IAAI;AAAA,YAC5B;AACA,mBAAO;AAAA,cACL;AAAA,cACA,MAAM,KAAK,OAAO,SAAS,gBAAgB,IAAI;AAAA,cAC/C,QAAQ,KAAK,OAAO,SAAS,kBAAkB,IAAI;AAAA,cACnD;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAEA,eAAO;AAAA,UACL,QAAQ;AAAA,UACR,MAAM;AAAA,UACN,QAAQ;AAAA,UACR,MAAM;AAAA,QACR;AAAA,MACF;AAMF,6BAAuB,UAAU,0BAC/B,0DAA0D;AACxD,YAAI,CAAC,KAAK,gBAAgB;AACxB,iBAAO;AAAA,QACT;AACA,eAAO,KAAK,eAAe,UAAU,KAAK,SAAS,KAAK,KACtD,CAAC,KAAK,eAAe,KAAK,SAAU,IAAI;AAAE,iBAAO,MAAM;AAAA,QAAM,CAAC;AAAA,MAClE;AAOF,6BAAuB,UAAU,mBAC/B,4CAA4C,SAAS,eAAe;AAClE,YAAI,CAAC,KAAK,gBAAgB;AACxB,iBAAO;AAAA,QACT;AAEA,YAAI,KAAK,cAAc,MAAM;AAC3B,oBAAU,KAAK,SAAS,KAAK,YAAY,OAAO;AAAA,QAClD;AAEA,YAAI,KAAK,SAAS,IAAI,OAAO,GAAG;AAC9B,iBAAO,KAAK,eAAe,KAAK,SAAS,QAAQ,OAAO;AAAA,QAC1D;AAEA,YAAI;AACJ,YAAI,KAAK,cAAc,QACf,OAAM,KAAK,SAAS,KAAK,UAAU,IAAI;AAK7C,cAAI,iBAAiB,QAAQ,QAAQ,cAAc,EAAE;AACrD,cAAI,IAAI,UAAU,UACX,KAAK,SAAS,IAAI,cAAc,GAAG;AACxC,mBAAO,KAAK,eAAe,KAAK,SAAS,QAAQ,cAAc;AAAA,UACjE;AAEA,cAAK,EAAC,IAAI,QAAQ,IAAI,QAAQ,QACvB,KAAK,SAAS,IAAI,MAAM,OAAO,GAAG;AACvC,mBAAO,KAAK,eAAe,KAAK,SAAS,QAAQ,MAAM,OAAO;AAAA,UAChE;AAAA,QACF;AAMA,YAAI,eAAe;AACjB,iBAAO;AAAA,QACT,OACK;AACH,gBAAM,IAAI,MAAM,MAAM,UAAU,4BAA4B;AAAA,QAC9D;AAAA,MACF;AAqBF,6BAAuB,UAAU,uBAC/B,gDAAgD,OAAO;AACrD,YAAI,SAAS,KAAK,OAAO,OAAO,QAAQ;AACxC,YAAI,KAAK,cAAc,MAAM;AAC3B,mBAAS,KAAK,SAAS,KAAK,YAAY,MAAM;AAAA,QAChD;AACA,YAAI,CAAC,KAAK,SAAS,IAAI,MAAM,GAAG;AAC9B,iBAAO;AAAA,YACL,MAAM;AAAA,YACN,QAAQ;AAAA,YACR,YAAY;AAAA,UACd;AAAA,QACF;AACA,iBAAS,KAAK,SAAS,QAAQ,MAAM;AAErC,YAAI,SAAS;AAAA,UACX;AAAA,UACA,cAAc,KAAK,OAAO,OAAO,MAAM;AAAA,UACvC,gBAAgB,KAAK,OAAO,OAAO,QAAQ;AAAA,QAC7C;AAEA,YAAI,QAAQ,KAAK,aACf,QACA,KAAK,mBACL,gBACA,kBACA,KAAK,4BACL,KAAK,OAAO,OAAO,QAAQ,kBAAkB,oBAAoB,CACnE;AAEA,YAAI,SAAS,GAAG;AACd,cAAI,UAAU,KAAK,kBAAkB;AAErC,cAAI,QAAQ,WAAW,OAAO,QAAQ;AACpC,mBAAO;AAAA,cACL,MAAM,KAAK,OAAO,SAAS,iBAAiB,IAAI;AAAA,cAChD,QAAQ,KAAK,OAAO,SAAS,mBAAmB,IAAI;AAAA,cACpD,YAAY,KAAK,OAAO,SAAS,uBAAuB,IAAI;AAAA,YAC9D;AAAA,UACF;AAAA,QACF;AAEA,eAAO;AAAA,UACL,MAAM;AAAA,UACN,QAAQ;AAAA,UACR,YAAY;AAAA,QACd;AAAA,MACF;AAEF,cAAQ,yBAAyB;AA+CjC,wCAAkC,YAAY;AAC5C,YAAI,YAAY;AAChB,YAAI,OAAO,eAAe,UAAU;AAClC,sBAAY,KAAK,MAAM,WAAW,QAAQ,YAAY,EAAE,CAAC;AAAA,QAC3D;AAEA,YAAI,UAAU,KAAK,OAAO,WAAW,SAAS;AAC9C,YAAI,WAAW,KAAK,OAAO,WAAW,UAAU;AAEhD,YAAI,WAAW,KAAK,UAAU;AAC5B,gBAAM,IAAI,MAAM,0BAA0B,OAAO;AAAA,QACnD;AAEA,aAAK,WAAW,IAAI,SAAS;AAC7B,aAAK,SAAS,IAAI,SAAS;AAE3B,YAAI,aAAa;AAAA,UACf,MAAM;AAAA,UACN,QAAQ;AAAA,QACV;AACA,aAAK,YAAY,SAAS,IAAI,SAAU,GAAG;AACzC,cAAI,EAAE,KAAK;AAGT,kBAAM,IAAI,MAAM,oDAAoD;AAAA,UACtE;AACA,cAAI,SAAS,KAAK,OAAO,GAAG,QAAQ;AACpC,cAAI,aAAa,KAAK,OAAO,QAAQ,MAAM;AAC3C,cAAI,eAAe,KAAK,OAAO,QAAQ,QAAQ;AAE/C,cAAI,aAAa,WAAW,QACvB,eAAe,WAAW,QAAQ,eAAe,WAAW,QAAS;AACxE,kBAAM,IAAI,MAAM,sDAAsD;AAAA,UACxE;AACA,uBAAa;AAEb,iBAAO;AAAA,YACL,iBAAiB;AAAA,cAGf,eAAe,aAAa;AAAA,cAC5B,iBAAiB,eAAe;AAAA,YAClC;AAAA,YACA,UAAU,IAAI,kBAAkB,KAAK,OAAO,GAAG,KAAK,CAAC;AAAA,UACvD;AAAA,QACF,CAAC;AAAA,MACH;AA9CS,AAgDT,+BAAyB,YAAY,OAAO,OAAO,kBAAkB,SAAS;AAC9E,+BAAyB,UAAU,cAAc;AAKjD,+BAAyB,UAAU,WAAW;AAK9C,aAAO,eAAe,yBAAyB,WAAW,WAAW;AAAA,QACnE,KAAK,WAAY;AACf,cAAI,UAAU,CAAC;AACf,mBAAS,IAAI,GAAG,IAAI,KAAK,UAAU,QAAQ,KAAK;AAC9C,qBAAS,IAAI,GAAG,IAAI,KAAK,UAAU,GAAG,SAAS,QAAQ,QAAQ,KAAK;AAClE,sBAAQ,KAAK,KAAK,UAAU,GAAG,SAAS,QAAQ,EAAE;AAAA,YACpD;AAAA,UACF;AACA,iBAAO;AAAA,QACT;AAAA,MACF,CAAC;AAiBD,+BAAyB,UAAU,sBACjC,sDAAsD,OAAO;AAC3D,YAAI,SAAS;AAAA,UACX,eAAe,KAAK,OAAO,OAAO,MAAM;AAAA,UACxC,iBAAiB,KAAK,OAAO,OAAO,QAAQ;AAAA,QAC9C;AAIA,YAAI,eAAe,aAAa,OAAO,QAAQ,KAAK,WAClD,SAAS,SAAQ,UAAS;AACxB,cAAI,MAAM,QAAO,gBAAgB,SAAQ,gBAAgB;AACzD,cAAI,KAAK;AACP,mBAAO;AAAA,UACT;AAEA,iBAAQ,QAAO,kBACP,SAAQ,gBAAgB;AAAA,QAClC,CAAC;AACH,YAAI,UAAU,KAAK,UAAU;AAE7B,YAAI,CAAC,SAAS;AACZ,iBAAO;AAAA,YACL,QAAQ;AAAA,YACR,MAAM;AAAA,YACN,QAAQ;AAAA,YACR,MAAM;AAAA,UACR;AAAA,QACF;AAEA,eAAO,QAAQ,SAAS,oBAAoB;AAAA,UAC1C,MAAM,OAAO,gBACV,SAAQ,gBAAgB,gBAAgB;AAAA,UAC3C,QAAQ,OAAO,kBACZ,SAAQ,gBAAgB,kBAAkB,OAAO,gBAC/C,QAAQ,gBAAgB,kBAAkB,IAC1C;AAAA,UACL,MAAM,MAAM;AAAA,QACd,CAAC;AAAA,MACH;AAMF,+BAAyB,UAAU,0BACjC,4DAA4D;AAC1D,eAAO,KAAK,UAAU,MAAM,SAAU,GAAG;AACvC,iBAAO,EAAE,SAAS,wBAAwB;AAAA,QAC5C,CAAC;AAAA,MACH;AAOF,+BAAyB,UAAU,mBACjC,mDAAmD,SAAS,eAAe;AACzE,iBAAS,IAAI,GAAG,IAAI,KAAK,UAAU,QAAQ,KAAK;AAC9C,cAAI,UAAU,KAAK,UAAU;AAE7B,cAAI,UAAU,QAAQ,SAAS,iBAAiB,SAAS,IAAI;AAC7D,cAAI,SAAS;AACX,mBAAO;AAAA,UACT;AAAA,QACF;AACA,YAAI,eAAe;AACjB,iBAAO;AAAA,QACT,OACK;AACH,gBAAM,IAAI,MAAM,MAAM,UAAU,4BAA4B;AAAA,QAC9D;AAAA,MACF;AAgBF,+BAAyB,UAAU,uBACjC,uDAAuD,OAAO;AAC5D,iBAAS,IAAI,GAAG,IAAI,KAAK,UAAU,QAAQ,KAAK;AAC9C,cAAI,UAAU,KAAK,UAAU;AAI7B,cAAI,QAAQ,SAAS,QAAQ,QAAQ,KAAK,OAAO,OAAO,QAAQ,CAAC,MAAM,IAAI;AACzE;AAAA,UACF;AACA,cAAI,oBAAoB,QAAQ,SAAS,qBAAqB,KAAK;AACnE,cAAI,mBAAmB;AACrB,gBAAI,MAAM;AAAA,cACR,MAAM,kBAAkB,OACrB,SAAQ,gBAAgB,gBAAgB;AAAA,cAC3C,QAAQ,kBAAkB,SACvB,SAAQ,gBAAgB,kBAAkB,kBAAkB,OAC1D,QAAQ,gBAAgB,kBAAkB,IAC1C;AAAA,YACP;AACA,mBAAO;AAAA,UACT;AAAA,QACF;AAEA,eAAO;AAAA,UACL,MAAM;AAAA,UACN,QAAQ;AAAA,QACV;AAAA,MACF;AAOF,+BAAyB,UAAU,iBACjC,gDAAgD,MAAM,aAAa;AACjE,aAAK,sBAAsB,CAAC;AAC5B,aAAK,qBAAqB,CAAC;AAC3B,iBAAS,IAAI,GAAG,IAAI,KAAK,UAAU,QAAQ,KAAK;AAC9C,cAAI,UAAU,KAAK,UAAU;AAC7B,cAAI,kBAAkB,QAAQ,SAAS;AACvC,mBAAS,IAAI,GAAG,IAAI,gBAAgB,QAAQ,KAAK;AAC/C,gBAAI,UAAU,gBAAgB;AAE9B,gBAAI,SAAS,QAAQ,SAAS,SAAS,GAAG,QAAQ,MAAM;AACxD,gBAAI,QAAQ,SAAS,eAAe,MAAM;AACxC,uBAAS,KAAK,KAAK,QAAQ,SAAS,YAAY,MAAM;AAAA,YACxD;AACA,iBAAK,SAAS,IAAI,MAAM;AACxB,qBAAS,KAAK,SAAS,QAAQ,MAAM;AAErC,gBAAI,OAAO,QAAQ,SAAS,OAAO,GAAG,QAAQ,IAAI;AAClD,iBAAK,OAAO,IAAI,IAAI;AACpB,mBAAO,KAAK,OAAO,QAAQ,IAAI;AAM/B,gBAAI,kBAAkB;AAAA,cACpB;AAAA,cACA,eAAe,QAAQ,gBACpB,SAAQ,gBAAgB,gBAAgB;AAAA,cAC3C,iBAAiB,QAAQ,kBACtB,SAAQ,gBAAgB,kBAAkB,QAAQ,gBACjD,QAAQ,gBAAgB,kBAAkB,IAC1C;AAAA,cACJ,cAAc,QAAQ;AAAA,cACtB,gBAAgB,QAAQ;AAAA,cACxB;AAAA,YACF;AAEA,iBAAK,oBAAoB,KAAK,eAAe;AAC7C,gBAAI,OAAO,gBAAgB,iBAAiB,UAAU;AACpD,mBAAK,mBAAmB,KAAK,eAAe;AAAA,YAC9C;AAAA,UACF;AAAA,QACF;AAEA,kBAAU,KAAK,qBAAqB,KAAK,mCAAmC;AAC5E,kBAAU,KAAK,oBAAoB,KAAK,0BAA0B;AAAA,MACpE;AAEF,cAAQ,2BAA2B;AAAA;AAAA;;;ACzjCnC;AAAA;AAAA,MAAC,UAAS,MAAM,SAAS;AACrB;AAIA,YAAI,OAAO,WAAW,cAAc,OAAO,KAAK;AAC5C,iBAAO,kBAAkB,CAAC,cAAc,YAAY,GAAG,OAAO;AAAA,QAClE,WAAW,OAAO,YAAY,UAAU;AACpC,iBAAO,UAAU,QAAQ,+BAA+C,oBAAqB;AAAA,QACjG,OAAO;AACH,eAAK,gBAAgB,QAAQ,KAAK,aAAa,KAAK,WAAW,KAAK,UAAU;AAAA,QAClF;AAAA,MACJ,GAAE,SAAM,SAAS,WAAW,YAAY;AACpC;AAQA,sBAAc,KAAK;AACf,iBAAO,IAAI,QAAQ,SAAS,SAAS,QAAQ;AACzC,gBAAI,MAAM,IAAI,eAAe;AAC7B,gBAAI,KAAK,OAAO,GAAG;AACnB,gBAAI,UAAU;AACd,gBAAI,qBAAqB,8BAA8B;AACnD,kBAAI,IAAI,eAAe,GAAG;AACtB,oBAAK,IAAI,UAAU,OAAO,IAAI,SAAS,OAClC,IAAI,OAAO,GAAG,CAAC,MAAM,aAAa,IAAI,cAAe;AACtD,0BAAQ,IAAI,YAAY;AAAA,gBAC5B,OAAO;AACH,yBAAO,IAAI,MAAM,kBAAkB,IAAI,SAAS,iBAAiB,GAAG,CAAC;AAAA,gBACzE;AAAA,cACJ;AAAA,YACJ;AACA,gBAAI,KAAK;AAAA,UACb,CAAC;AAAA,QAEL;AAlBS,AA2BT,uBAAe,QAAQ;AACnB,cAAI,OAAO,WAAW,eAAe,OAAO,MAAM;AAC9C,mBAAO,OAAO,KAAK,MAAM;AAAA,UAC7B,OAAO;AACH,kBAAM,IAAI,MAAM,gEAAgE;AAAA,UACpF;AAAA,QACJ;AANS,AAQT,4BAAoB,QAAQ;AACxB,cAAI,OAAO,SAAS,eAAe,KAAK,OAAO;AAC3C,mBAAO,KAAK,MAAM,MAAM;AAAA,UAC5B,OAAO;AACH,kBAAM,IAAI,MAAM,+DAA+D;AAAA,UACnF;AAAA,QACJ;AANS,AAQT,mCAA2B,QAAQ,YAA8B;AAC7D,cAAI,WAAW;AAAA,YAEX;AAAA,YAEA;AAAA,YAEA;AAAA,YAEA;AAAA,YAEA;AAAA,UACJ;AACA,cAAI,QAAQ,OAAO,MAAM,IAAI;AAG7B,cAAI,OAAO;AACX,cAAI,WAAW,KAAK,IAAI,YAAY,EAAE;AACtC,mBAAS,IAAI,GAAG,IAAI,UAAU,EAAE,GAAG;AAE/B,gBAAI,OAAO,MAAM,aAAa,IAAI;AAClC,gBAAI,aAAa,KAAK,QAAQ,IAAI;AAClC,gBAAI,cAAc,GAAG;AACjB,qBAAO,KAAK,OAAO,GAAG,UAAU;AAAA,YACpC;AAEA,gBAAI,MAAM;AACN,qBAAO,OAAO;AACd,kBAAI,MAAM,SAAS;AACnB,uBAAS,QAAQ,GAAG,QAAQ,KAAK,SAAS;AACtC,oBAAI,IAAI,SAAS,OAAO,KAAK,IAAI;AACjC,oBAAI,KAAK,EAAE,IAAI;AACX,yBAAO,EAAE;AAAA,gBACb;AAAA,cACJ;AAAA,YACJ;AAAA,UACJ;AACA,iBAAO;AAAA,QACX;AAtCS,AAwCT,+CAAuC;AACnC,cAAI,OAAO,OAAO,mBAAmB,cAAc,OAAO,OAAO,WAAW,YAAY;AACpF,kBAAM,IAAI,MAAM,iDAAiD;AAAA,UACrE;AAAA,QACJ;AAJS,AAMT,0CAAkC,YAAY;AAC1C,cAAI,OAAO,eAAe,UAAU;AAChC,kBAAM,IAAI,UAAU,mCAAmC;AAAA,UAC3D,WAAW,OAAO,WAAW,aAAa,UAAU;AAChD,kBAAM,IAAI,UAAU,iCAAiC;AAAA,UACzD,WAAW,OAAO,WAAW,eAAe,YACxC,WAAW,aAAa,MAAM,KAC9B,WAAW,aAAa,GAAG;AAC3B,kBAAM,IAAI,UAAU,8CAA8C;AAAA,UACtE,WAAW,OAAO,WAAW,iBAAiB,YAC1C,WAAW,eAAe,MAAM,KAChC,WAAW,eAAe,GAAG;AAC7B,kBAAM,IAAI,UAAU,oDAAoD;AAAA,UAC5E;AACA,iBAAO;AAAA,QACX;AAfS,AAiBT,uCAA+B,QAAQ;AACnC,cAAI,yBAAyB;AAC7B,cAAI;AACJ,cAAI;AAEJ,iBAAO,wBAAwB,uBAAuB,KAAK,MAAM,GAAG;AAChE,mCAAuB,sBAAsB;AAAA,UACjD;AACA,cAAI,sBAAsB;AACtB,mBAAO;AAAA,UACX,OAAO;AACH,kBAAM,IAAI,MAAM,4BAA4B;AAAA,UAChD;AAAA,QACJ;AAbS,AAeT,yDAAiD,YAAY,mBAAmB,aAAa;AACzF,iBAAO,IAAI,QAAQ,SAAS,SAAS,QAAQ;AACzC,gBAAI,MAAM,kBAAkB,oBAAoB;AAAA,cAC5C,MAAM,WAAW;AAAA,cACjB,QAAQ,WAAW;AAAA,YACvB,CAAC;AAED,gBAAI,IAAI,QAAQ;AAEZ,kBAAI,eAAe,kBAAkB,iBAAiB,IAAI,MAAM;AAChE,kBAAI,cAAc;AACd,4BAAY,IAAI,UAAU;AAAA,cAC9B;AAEA,sBAEI,IAAI,WAAW;AAAA,gBACX,cAAc,IAAI,QAAQ,WAAW;AAAA,gBACrC,MAAM,WAAW;AAAA,gBACjB,UAAU,IAAI;AAAA,gBACd,YAAY,IAAI;AAAA,gBAChB,cAAc,IAAI;AAAA,cACtB,CAAC,CAAC;AAAA,YACV,OAAO;AACH,qBAAO,IAAI,MAAM,mEAAmE,CAAC;AAAA,YACzF;AAAA,UACJ,CAAC;AAAA,QACL;AA3BS,AAsCT,eAAO,uBAAuB,MAAM;AAChC,cAAI,CAAE,iBAAgB,gBAAgB;AAClC,mBAAO,IAAI,cAAc,IAAI;AAAA,UACjC;AACA,iBAAO,QAAQ,CAAC;AAEhB,eAAK,cAAc,KAAK,eAAe,CAAC;AACxC,eAAK,yBAAyB,KAAK,0BAA0B,CAAC;AAE9D,eAAK,OAAO,KAAK,QAAQ;AAEzB,eAAK,QAAQ,KAAK,QAAQ;AAE1B,eAAK,OAAO,cAAc,WAAU;AAChC,mBAAO,IAAI,QAAQ,SAAS,SAAS,QAAQ;AACzC,kBAAI,YAAY,UAAS,OAAO,GAAG,CAAC,MAAM;AAC1C,kBAAI,KAAK,YAAY,YAAW;AAC5B,wBAAQ,KAAK,YAAY,UAAS;AAAA,cACtC,WAAW,KAAK,WAAW,CAAC,WAAW;AACnC,uBAAO,IAAI,MAAM,8CAA8C,CAAC;AAAA,cACpE,OAAO;AACH,oBAAI,WAAW;AAGX,sBAAI,0BACA;AACJ,sBAAI,QAAQ,UAAS,MAAM,uBAAuB;AAClD,sBAAI,OAAO;AACP,wBAAI,iBAAiB,MAAM,GAAG;AAC9B,wBAAI,gBAAgB,UAAS,OAAO,cAAc;AAClD,wBAAI,SAAS,KAAK,MAAM,aAAa;AACrC,yBAAK,YAAY,aAAY;AAC7B,4BAAQ,MAAM;AAAA,kBAClB,OAAO;AACH,2BAAO,IAAI,MAAM,uDAAuD,CAAC;AAAA,kBAC7E;AAAA,gBACJ,OAAO;AACH,sBAAI,aAAa,KAAK,KAAK,WAAU,EAAC,QAAQ,MAAK,CAAC;AAEpD,uBAAK,YAAY,aAAY;AAC7B,6BAAW,KAAK,SAAS,MAAM;AAAA,gBACnC;AAAA,cACJ;AAAA,YACJ,EAAE,KAAK,IAAI,CAAC;AAAA,UAChB;AAUA,eAAK,wBAAwB,+BAA+B,kBAAkB,mBAAmB;AAC7F,mBAAO,IAAI,QAAQ,SAAS,SAAS;AACjC,kBAAI,KAAK,uBAAuB,mBAAmB;AAC/C,wBAAQ,KAAK,uBAAuB,iBAAiB;AAAA,cACzD,OAAO;AACH,oBAAI,2BAA2B,IAAI,QAAQ,SAAS,UAAS,QAAQ;AACjE,yBAAO,KAAK,KAAK,gBAAgB,EAAE,KAAK,SAAS,iBAAiB;AAC9D,wBAAI,OAAO,oBAAoB,UAAU;AACrC,wCAAkB,WAAW,gBAAgB,QAAQ,YAAY,EAAE,CAAC;AAAA,oBACxE;AACA,wBAAI,OAAO,gBAAgB,eAAe,aAAa;AACnD,sCAAgB,aAAa;AAAA,oBACjC;AAEA,6BAAQ,IAAI,UAAU,kBAAkB,eAAe,CAAC;AAAA,kBAC5D,GAAG,MAAM;AAAA,gBACb,EAAE,KAAK,IAAI,CAAC;AACZ,qBAAK,uBAAuB,oBAAoB;AAChD,wBAAQ,wBAAwB;AAAA,cACpC;AAAA,YACJ,EAAE,KAAK,IAAI,CAAC;AAAA,UAChB;AASA,eAAK,WAAW,iCAAiC,YAAY;AACzD,mBAAO,IAAI,QAAQ,SAAS,SAAS,QAAQ;AACzC,mBAAK,kBAAkB,UAAU,EAAE,KAAK,SAAS,kBAAkB;AAC/D,mDAAmC;AAC/B,0BAAQ,gBAAgB;AAAA,gBAC5B;AAFS,AAIT,qBAAK,iBAAiB,gBAAgB,EACjC,KAAK,SAAS,uBAAuB,EAErC,SAAS,uBAAuB;AAAA,cACzC,EAAE,KAAK,IAAI,GAAG,MAAM;AAAA,YACxB,EAAE,KAAK,IAAI,CAAC;AAAA,UAChB;AAQA,eAAK,mBAAmB,yCAAyC,YAAY;AACzE,mBAAO,IAAI,QAAQ,SAAS,SAAS,QAAQ;AACzC,uCAAyB,UAAU;AACnC,mBAAK,KAAK,WAAW,QAAQ,EAAE,KAAK,2BAA2B,QAAQ;AACnE,oBAAI,aAAa,WAAW;AAC5B,oBAAI,eAAe,WAAW;AAC9B,oBAAI,sBAAsB,kBAAkB,QAAQ,YAAY,YAAY;AAE5E,oBAAI,qBAAqB;AACrB,0BAAQ,IAAI,WAAW;AAAA,oBACnB,cAAc;AAAA,oBACd,MAAM,WAAW;AAAA,oBACjB,UAAU,WAAW;AAAA,oBACrB;AAAA,oBACA;AAAA,kBACJ,CAAC,CAAC;AAAA,gBACN,OAAO;AACH,0BAAQ,UAAU;AAAA,gBACtB;AAAA,cACJ,GAAG,MAAM,EAAE,SAAS,MAAM;AAAA,YAC9B,EAAE,KAAK,IAAI,CAAC;AAAA,UAChB;AAQA,eAAK,oBAAoB,0CAA0C,YAAY;AAC3E,mBAAO,IAAI,QAAQ,SAAS,SAAS,QAAQ;AACzC,0CAA4B;AAC5B,uCAAyB,UAAU;AAEnC,kBAAI,cAAc,KAAK;AACvB,kBAAI,WAAW,WAAW;AAC1B,mBAAK,KAAK,QAAQ,EAAE,KAAK,SAAS,QAAQ;AACtC,oBAAI,mBAAmB,sBAAsB,MAAM;AACnD,oBAAI,YAAY,iBAAiB,OAAO,GAAG,CAAC,MAAM;AAClD,oBAAI,oBAAoB,SAAS,UAAU,GAAG,SAAS,YAAY,GAAG,IAAI,CAAC;AAE3E,oBAAI,iBAAiB,OAAO,OAAO,CAAC,aAAa,CAAE,sBAAuB,KAAK,gBAAgB,GAAG;AAC9F,qCAAmB,oBAAoB;AAAA,gBAC3C;AAEA,uBAAO,KAAK,sBAAsB,kBAAkB,iBAAiB,EAChE,KAAK,SAAS,mBAAmB;AAC9B,yBAAO,wCAAwC,YAAY,mBAAmB,WAAW,EACpF,KAAK,OAAO,EAAE,SAAS,WAAW;AAC/B,4BAAQ,UAAU;AAAA,kBACtB,CAAC;AAAA,gBACT,CAAC;AAAA,cACT,EAAE,KAAK,IAAI,GAAG,MAAM,EAAE,SAAS,MAAM;AAAA,YACzC,EAAE,KAAK,IAAI,CAAC;AAAA,UAChB;AAAA,QACJ;AAAA,MACJ,CAAC;AAAA;AAAA;;;ACrVD;AAAA;AAAA,MAAC,UAAS,MAAM,SAAS;AACrB;AAIA,YAAI,OAAO,WAAW,cAAc,OAAO,KAAK;AAC5C,iBAAO,cAAc,CAAC,sBAAsB,mBAAmB,gBAAgB,GAAG,OAAO;AAAA,QAC7F,WAAW,OAAO,YAAY,UAAU;AACpC,iBAAO,UAAU,QAAQ,8BAA+B,2BAA4B,wBAAyB;AAAA,QACjH,OAAO;AACH,eAAK,aAAa,QAAQ,KAAK,kBAAkB,KAAK,gBAAgB,KAAK,aAAa;AAAA,QAC5F;AAAA,MACJ,GAAE,SAAM,4CAAoB,kBAAkB,gBAAgB,eAAe;AACzE,YAAI,WAAW;AAAA,UACX,QAAQ,SAAS,YAAY;AAEzB,mBAAQ,YAAW,gBAAgB,IAAI,QAAQ,cAAc,MAAM,MAC9D,YAAW,gBAAgB,IAAI,QAAQ,oBAAoB,MAAM,MACjE,YAAW,gBAAgB,IAAI,QAAQ,iBAAiB,MAAM,MAC9D,YAAW,gBAAgB,IAAI,QAAQ,kBAAkB,MAAM;AAAA,UACxE;AAAA,UACA,aAAa,CAAC;AAAA,QAClB;AAEA,YAAI,iBAAiB,qCAAqC;AACtD,cAAI;AAEA,kBAAM,IAAI,MAAM;AAAA,UACpB,SAAS,KAAP;AACE,mBAAO;AAAA,UACX;AAAA,QACJ;AAWA,wBAAgB,OAAO,QAAQ;AAC3B,cAAI,SAAS,CAAC;AAEd,WAAC,OAAO,MAAM,EAAE,QAAQ,SAAS,KAAK;AAClC,qBAAS,QAAQ,KAAK;AAClB,kBAAI,OAAO,UAAU,eAAe,KAAK,KAAK,IAAI,GAAG;AACjD,uBAAO,QAAQ,IAAI;AAAA,cACvB;AAAA,YACJ;AACA,mBAAO;AAAA,UACX,CAAC;AAED,iBAAO;AAAA,QACX;AAbS,AAeT,4CAAoC,KAAK;AACrC,iBAAO,IAAI,SAAS,IAAI;AAAA,QAC5B;AAFS,AAIT,2BAAmB,aAAa,QAAQ;AACpC,cAAI,OAAO,WAAW,YAAY;AAC9B,mBAAO,YAAY,OAAO,MAAM;AAAA,UACpC;AACA,iBAAO;AAAA,QACX;AALS,AAOT,eAAO;AAAA,UAOH,KAAK,yBAAyB,MAAM;AAChC,gBAAI,MAAM,eAAe;AACzB,mBAAO,2BAA2B,GAAG,IAAI,KAAK,UAAU,KAAK,IAAI,IAAI,KAAK,qBAAqB,IAAI;AAAA,UACvG;AAAA,UASA,SAAS,6BAA6B,MAAM;AACxC,mBAAO,OAAO,UAAU,IAAI;AAC5B,gBAAI,MAAM,eAAe;AACzB,gBAAI,QAAQ,2BAA2B,GAAG,IAAI,iBAAiB,MAAM,GAAG,IAAI,eAAe,UAAU,IAAI;AACzG,mBAAO,UAAU,OAAO,KAAK,MAAM;AAAA,UACvC;AAAA,UASA,WAAW,+BAA+B,OAAO,MAAM;AACnD,mBAAO,OAAO,UAAU,IAAI;AAC5B,gBAAI,MAAM,IAAI,cAAc,IAAI;AAChC,mBAAO,IAAI,QAAQ,SAAS,SAAS;AACjC,kBAAI,cAAc,UAAU,iBAAiB,MAAM,KAAK,GAAG,KAAK,MAAM;AACtE,sBAAQ,QAAQ,IAAI,YAAY,IAAI,SAAS,IAAI;AAC7C,uBAAO,IAAI,QAAQ,SAAS,UAAS;AACjC,6CAA2B;AACvB,6BAAQ,EAAE;AAAA,kBACd;AAFS,AAIT,sBAAI,SAAS,EAAE,EAAE,KAAK,UAAS,eAAe,EAAE,SAAS,eAAe;AAAA,gBAC5E,CAAC;AAAA,cACL,CAAC,CAAC,CAAC;AAAA,YACP,EAAE,KAAK,IAAI,CAAC;AAAA,UAChB;AAAA,UAQA,sBAAsB,0CAA0C,MAAM;AAClE,mBAAO,OAAO,UAAU,IAAI;AAC5B,gBAAI,cAAc,eAAe,UAAU,IAAI;AAC/C,gBAAI,OAAO,KAAK,WAAW,YAAY;AACnC,4BAAc,YAAY,OAAO,KAAK,MAAM;AAAA,YAChD;AACA,mBAAO,QAAQ,QAAQ,WAAW;AAAA,UACtC;AAAA,UAWA,YAAY,gCAAgC,IAAI,UAAU,SAAS,SAAS;AACxE,gBAAI,OAAO,OAAO,YAAY;AAC1B,oBAAM,IAAI,MAAM,uCAAuC;AAAA,YAC3D,WAAW,OAAO,GAAG,2BAA2B,YAAY;AAExD,qBAAO;AAAA,YACX;AAEA,gBAAI,eAAe,oCAAoC;AACnD,kBAAI;AACA,qBAAK,IAAI,EAAE,KAAK,UAAU,OAAO,EAAE,SAAS,OAAO;AACnD,uBAAO,GAAG,MAAM,WAAW,MAAM,SAAS;AAAA,cAC9C,SAAS,GAAP;AACE,oBAAI,2BAA2B,CAAC,GAAG;AAC/B,uBAAK,UAAU,CAAC,EAAE,KAAK,UAAU,OAAO,EAAE,SAAS,OAAO;AAAA,gBAC9D;AACA,sBAAM;AAAA,cACV;AAAA,YACJ,EAAE,KAAK,IAAI;AACX,yBAAa,yBAAyB;AAEtC,mBAAO;AAAA,UACX;AAAA,UAQA,cAAc,kCAAkC,IAAI;AAChD,gBAAI,OAAO,OAAO,YAAY;AAC1B,oBAAM,IAAI,MAAM,0CAA0C;AAAA,YAC9D,WAAW,OAAO,GAAG,2BAA2B,YAAY;AACxD,qBAAO,GAAG;AAAA,YACd,OAAO;AAEH,qBAAO;AAAA,YACX;AAAA,UACJ;AAAA,UAUA,QAAQ,4BAA4B,aAAa,KAAK,UAAU,gBAAgB;AAC5E,mBAAO,IAAI,QAAQ,SAAS,SAAS,QAAQ;AACzC,kBAAI,MAAM,IAAI,eAAe;AAC7B,kBAAI,UAAU;AACd,kBAAI,qBAAqB,8BAA8B;AACnD,oBAAI,IAAI,eAAe,GAAG;AACtB,sBAAI,IAAI,UAAU,OAAO,IAAI,SAAS,KAAK;AACvC,4BAAQ,IAAI,YAAY;AAAA,kBAC5B,OAAO;AACH,2BAAO,IAAI,MAAM,aAAa,MAAM,0BAA0B,IAAI,MAAM,CAAC;AAAA,kBAC7E;AAAA,gBACJ;AAAA,cACJ;AACA,kBAAI,KAAK,QAAQ,GAAG;AAGpB,kBAAI,iBAAiB,gBAAgB,kBAAkB;AACvD,kBAAI,kBAAkB,OAAO,eAAe,YAAY,UAAU;AAC9D,oBAAI,UAAU,eAAe;AAC7B,yBAAS,UAAU,SAAS;AACxB,sBAAI,OAAO,UAAU,eAAe,KAAK,SAAS,MAAM,GAAG;AACvD,wBAAI,iBAAiB,QAAQ,QAAQ,OAAO;AAAA,kBAChD;AAAA,gBACJ;AAAA,cACJ;AAEA,kBAAI,gBAAgB,EAAC,OAAO,YAAW;AACvC,kBAAI,aAAa,UAAa,aAAa,MAAM;AAC7C,8BAAc,UAAU;AAAA,cAC5B;AAEA,kBAAI,KAAK,KAAK,UAAU,aAAa,CAAC;AAAA,YAC1C,CAAC;AAAA,UACL;AAAA,QACJ;AAAA,MACJ,GAtNQ,aAsNP;AAAA;AAAA;;;AClOD,6BAAuB;AAGvB,SAAO,iBAAiB,SAAS,CAAC,MAAM;AACpC,iCACD,UAAU,EAAE,KAAK,EACjB,KAAK,CAAC,UAAU;AAChB,YAAM,UAAU;AAAA,QACf,QAAQ;AAAA,QACR,SAAS;AAAA,UACR,gBAAgB;AAAA,QACjB;AAAA,QACA,MAAM,KAAK,UAAU;AAAA,UACpB,KAAK,EAAE,MAAM;AAAA,UACb,OAAO,MAAM,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC,SAAS;AACtC,mBAAO,iCACH,OADG;AAAA,cAEN,MAAM,KAAK,SAAS,QAAQ,SAAS,SAAS,KAAK,EAAE;AAAA,cACrD,MAAM,KAAK;AAAA,cACX,KAAK,KAAK;AAAA,YACX;AAAA,UACD,CAAC;AAAA,QACF,CAAC;AAAA,MACF,CAAC;AAAA,IACF,CAAC,EACA,MAAM,MAAM,QAAQ,MAAM,qBAAqB,CAAC;AAAA,EACnD,CAAC;AAuBD,MAAM,SAAiB;AAAA,IAEtB,UAAgC;AAC/B,aAAO,MAAM,OAAO,EAClB,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,EACxB,KAAK,CAAC,SAAS;AACf,YAAI,MAAM;AACT,iBAAO,QAAQ,QAAQ,IAAI;AAAA,QAC5B,OAAO;AACN,iBAAO,QAAQ,QAAQ,IAAI;AAAA,QAC5B;AAAA,MACD,CAAC;AAAA,IACH;AAAA,IAEA,OAA6B;AAE5B,aAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AAEvC,cAAM,eAAe,wBAAC,MAAM;AAC3B,cAAI,EAAE,SAAS,iBAAiB;AAC/B,oBAAQ,IAAI;AACZ;AAAA,UACD;AACA,iBAAO,oBAAoB,WAAW,YAAY;AAClD,qBAAW,MAAM;AACjB,eAAK,QAAQ,EAAE,KAAK,OAAO;AAAA,QAC5B,GARqB;AAUrB,eAAO,iBAAiB,WAAW,YAAY;AAE/C,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,OAAQ,OAAO,QAAQ,IAAM,IAAI;AACvC,cAAM,MAAO,OAAO,SAAS,IAAM,IAAI;AAEvC,cAAM,aAAa,OAAO,KACzB,8CAA8C,SAAS,QACvD,UACA,iIAAiI,aAAa,UAAU,aAAa,MACtK;AAAA,MAED,CAAC;AAAA,IAEF;AAAA,IAEA,gBAAsC;AACrC,aAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACvC,aAAK,QAAQ,EAAE,KAAK,CAAC,SAAS;AAC7B,cAAI,MAAM;AACT,oBAAQ,IAAI;AAAA,UACb,OAAO;AACN,iBAAK,KAAK,EAAE,KAAK,CAAC,UAAS;AAC1B,sBAAQ,KAAI;AAAA,YACb,CAAC;AAAA,UACF;AAAA,QACD,CAAC;AAAA,MACF,CAAC;AAAA,IACF;AAAA,IAEA,QAAiB,KAAa,KAAqB;AAClD,aAAO,MAAM,OAAO,KAAK,EACvB,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,EACxB,KAAK,CAAC,QAAQ;AAEd,YAAI,OAAO,QAAQ,QAAQ,QAAW;AACrC,iBAAO,KAAK,QAAQ,KAAK,GAAG;AAAA,QAC7B;AACA,eAAO,QAAQ,QAAQ,GAAG;AAAA,MAC3B,CAAC;AAAA,IACH;AAAA,IAEA,QAAW,KAAa,KAAoB;AAC3C,aAAO,MAAM,OAAO,OAAO;AAAA,QAC1B,QAAQ;AAAA,QACR,SAAS;AAAA,UACR,gBAAgB;AAAA,QACjB;AAAA,QACA,MAAM,KAAK,UAAU,GAAG;AAAA,MACzB,CAAC,EAAE,KAAK,MAAM,QAAQ,QAAQ,GAAG,CAAC;AAAA,IACnC;AAAA,IAEA,QAAQ,KAA4B;AACnC,aAAO,MAAM,OAAO,OAAO;AAAA,QAC1B,QAAQ;AAAA,MACT,CAAC,EAAE,KAAK,MAAM;AAAA,MAAC,CAAC;AAAA,IACjB;AAAA,IAEA,WAA8B;AAC7B,aAAO,MAAM,KAAK,EAChB,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC;AAAA,IAC3B;AAAA,IAEA,YAA2B;AAC1B,aAAO,MAAM,OAAO;AAAA,QACnB,QAAQ;AAAA,MACT,CAAC,EAAE,KAAK,CAAC,QAAQ;AAAA,MAAC,CAAC;AAAA,IACpB;AAAA,EAED;AAEA,SAAO,SAAS;",
  "names": []
}
